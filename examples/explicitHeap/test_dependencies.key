\functions {
   \nonRigid[Location] Object o1;
   \nonRigid[Location] Object o2;

   \unique Field f;
   int obs(Heap, Object); //"observer" symbol: heap as parameter!
}


\problem {
    //assume that for all o, obs(o) currently depends only on o.f 
    //(i.e., "\forall o; o.f frames o.obs")
    \forall Heap h; \forall Object o; ( 
           select(h, o, f) = select(heap, o, f)
           -> obs(h, o) = obs(heap, o)
    )

    //assume that o1 and o2 are different
    & o1 != o2

    ->

    //then: updating o2.f should not affect obs(o1)
    obs(heap, o1) = {heap:=store(heap,o2,f,3)} obs(heap, o1)
}  