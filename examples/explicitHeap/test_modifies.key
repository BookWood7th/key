\functions {
   \nonRigid[Location] Object o1;
   \nonRigid[Location] Object o2;
   \nonRigid[Location] Object o3;

   \unique Field f;
   Heap heapAtPre;
   Object o1AtPre;
   Object o2AtPre;
}

\problem {
    //Our program should satisfy the modifies clause {o1.f, o2.f}


    o1 != o2 & heap = heapAtPre & o1 = o1AtPre & o2 = o2AtPre
    ->

    //CORRECT PROGRAM: {o1.f := 3}{o2.f := 4}{o1 = null}
    {heap:=store(heap,o1,f,3)}{heap:=store(heap,o2,f,4)}{o1:=null}\[{}\]

    //INCORRECT PROGRAM: {o1.f := 3}{o3.f := 4}
    //{heap:=store(heap,o1,f,3)}{heap:=store(heap,o3,f,4)}\[{}\]

    //all heap locations must either be unchanged or be in the modifies clause
    (\forall Object o; \forall Field g; (
             select(heap, o, g) = select(heapAtPre, o, g)
             | o = o1AtPre & g = f
             | o = o2AtPre & g = f
    ))
}  