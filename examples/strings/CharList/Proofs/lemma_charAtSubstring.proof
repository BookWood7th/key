\settings {
"#Proof-Settings-Config-File
#Wed May 06 13:07:21 CEST 2009
[General]SoundNotification=false
[View]FontIndex=2
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[General]UseOCL=false
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_LOW
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_LOW
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[DecisionProcedure]Timeout=60
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]StupidMode=true
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[Libraries]Default=acc.key-false, stringRules.key-false, /Users/geilmann/.key/libraries/deprecatedRules.key-false, /Users/geilmann/.key/libraries/acc.key-false, /Users/geilmann/.key/libraries/stringRules.key-false, deprecatedRules.key-false, /Users/geilmann/Documents/Studienarbeit/./stringsTheory.key-false
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Choice]DefaultChoices=throughout-throughout\:toutOn , transactions-transactions\:transactionsOn , assertions-assertions\:on , intRules-intRules\:arithmeticSemanticsIgnoringOF , programRules-programRules\:Java , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[DecisionProcedure]ActiveRule=_noname_
[General]UseJML=false
[View]HideClosedSubtrees=false
[Choice]Choices=throughout-throughout\:toutOn-throughout\:toutOff , transactions-transactions\:transactionsOn-transactions\:transactionsOff , assertions-assertions\:on-assertions\:off-assertions\:safe , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , programRules-programRules\:Java-programRules\:ODL , initialisation-initialisation\:enableStaticInitialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff-javacard\:jcOn
[View]HideIntermediateProofsteps=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}


\functions {
\nonRigid CharList l_163;
\nonRigid int j_165;
\nonRigid int i_166;
\nonRigid int k_164;
}

\problem {
  charAt(i_166, substring(j_165, k_164, l_163))
= \if (  i_166 <  k_164 - j_165
       & i_166 >= 0
       & j_165 >= 0
       & k_164 >  j_165
       & i_166 + j_165 <  length(l_163))
      \then (charAt(i_166 + j_165, l_163))
      \else (charAt(i_166,
                    substring(j_165, k_164, l_163)))

}

\proof {
(keyLog "0" (keyUser "geilmann" ) (keyVersion "49e89255011484213292e3567319499e39f7e82a"))

(autoModeTime "23212")

(branch "dummy ID"
(rule "ifthenelse_split" (formula "1") (term "1") (userinteraction))
(branch "   i_166 <  k_164 - j_165
& i_166 >= 0
& j_165 >= 0
& k_164 >  j_165
& i_166 + j_165 <  length(l_163) TRUE"
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "cl_induct" (inst "phi=\\forall int i; 
  \\forall int j; 
    \\forall int k; 
      (     i <  k - j
          & i >= 0
          & j >= 0
          & k >  j
          & i + j <  length(lv)
       ->   charAt(i, substring(j, k, lv))
          = charAt(i + j, lv))") (inst "lv=lv") (inst "cv=c") (userinteraction))
   (branch " Base Case"
      (rule "allRight" (formula "6") (inst "sk=i_1") (userinteraction))
      (rule "allRight" (formula "6") (inst "sk=j_0") (userinteraction))
      (rule "allRight" (formula "6") (inst "sk=k_0") (userinteraction))
      (rule "impRight" (formula "6") (userinteraction))
      (rule "cl_substringEmpty" (formula "7") (term "1,0") (userinteraction))
      (rule "cl_charAtHead" (formula "7") (term "0") (userinteraction))
      (rule "cl_charAtHead" (formula "7") (term "1") (userinteraction))
      (rule "eqClose" (formula "7") (userinteraction))
      (rule "closeTrue" (formula "7") (userinteraction))
   )
   (branch " Step Case"
      (rule "hide_right" (formula "7") (userinteraction))
      (rule "allRight" (formula "6") (inst "sk=lv_0") (userinteraction))
      (rule "allRight" (formula "6") (inst "sk=c_0") (userinteraction))
      (rule "impRight" (formula "6") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "allRight" (formula "8") (inst "sk=i_2") (userinteraction))
      (rule "allRight" (formula "8") (inst "sk=j_1") (userinteraction))
      (rule "allRight" (formula "8") (inst "sk=k_1") (userinteraction))
      (rule "hide_left" (formula "3") (userinteraction))
      (rule "hide_left" (formula "3") (userinteraction))
      (rule "hide_left" (formula "3") (userinteraction))
      (rule "hide_left" (formula "3") (userinteraction))
      (rule "hide_left" (formula "3") (userinteraction))
      (rule "impRight" (formula "3") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "cl_charAtI" (formula "8") (term "1") (userinteraction))
      (rule "ifthenelse_split" (formula "8") (term "1") (userinteraction))
      (branch " i_2 + j_1 >  0 TRUE"
         (rule "cl_substringI" (formula "9") (term "1,0") (userinteraction))
         (rule "ifthenelse_split" (formula "9") (term "1,0") (userinteraction))
         (branch " j_1 >  0 TRUE"
            (rule "instAll" (formula "10") (term "0,0") (ifseqformula "9") (userinteraction))
            (rule "hide_left" (formula "10") (userinteraction))
            (rule "instAll" (formula "10") (term "0,1,0") (ifseqformula "1") (userinteraction))
            (rule "instAll" (formula "11") (term "1,1,0") (ifseqformula "1") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch " Case 1"
               (rule "andRight" (formula "11") (userinteraction))
               (branch " Case 1"
                  (rule "andRight" (formula "11") (userinteraction))
                  (branch " Case 1"
                     (rule "andRight" (formula "11") (userinteraction))
                     (branch " Case 1"
                        (rule "andRight" (formula "11") (userinteraction))
                        (branch " Case 1"
                           (rule "polySimp_elimSub" (formula "11") (term "1,1"))
                           (rule "mul_literals" (formula "11") (term "1,1,1"))
                           (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                           (rule "mul_literals" (formula "11") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "11") (term "1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "11") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1"))
                           (rule "mul_literals" (formula "11") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "11") (term "1"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                           (rule "add_literals" (formula "11") (term "0,0,1"))
                           (rule "add_zero_left" (formula "11") (term "0,1"))
                           (rule "times_minus_one_1" (formula "11") (term "0,1") (userinteraction))
                           (rule "polySimp_addComm0" (formula "11") (term "1") (userinteraction))
                           (rule "polySimp_addComm0" (formula "11") (term "1") (userinteraction))
                           (rule "polySimp_elimSub" (formula "5") (term "1") (userinteraction))
                           (rule "polySimp_addComm0" (formula "5") (term "1") (userinteraction))
                           (rule "times_minus_one_1" (formula "5") (term "0,1") (userinteraction))
                           (rule "closeAntec" (formula "5") (ifseqformula "11") (userinteraction))
                        )
                        (branch " Case 2"
                           (rule "close" (formula "11") (ifseqformula "6") (userinteraction))
                        )
                     )
                     (branch " Case 2"
                        (rule "polySimp_elimSub" (formula "11") (term "0"))
                        (rule "mul_literals" (formula "11") (term "1,0"))
                        (rule "inEqSimp_geqRight" (formula "11"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "hide_left" (formula "2") (userinteraction))
                        (rule "hide_left" (formula "2") (userinteraction))
                        (rule "inChar" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "polySimp_elimSub" (formula "9") (term "1,1,0"))
                        (rule "mul_literals" (formula "9") (term "1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "9") (term "0,1,0"))
                        (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "9") (term "0,1"))
                        (rule "mul_literals" (formula "9") (term "1,0,1"))
                        (rule "polySimp_elimSub" (formula "4") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "2"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "3"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_addComm0" (formula "9") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                        (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (rule "concrete_or_1" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (rule "concrete_and_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch " Case 2"
                     (rule "polySimp_elimSub" (formula "11") (term "1"))
                     (rule "mul_literals" (formula "11") (term "1,1"))
                     (rule "polySimp_elimSub" (formula "11") (term "0"))
                     (rule "mul_literals" (formula "11") (term "1,0"))
                     (rule "inEqSimp_gtRight" (formula "11"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "cl_lengthCons" (formula "10") (term "1") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "inChar" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "polySimp_elimSub" (formula "9") (term "0,1"))
                     (rule "mul_literals" (formula "9") (term "1,0,1"))
                     (rule "polySimp_elimSub" (formula "9") (term "1,1,0"))
                     (rule "mul_literals" (formula "9") (term "1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "1"))
                     (rule "polySimp_elimSub" (formula "9") (term "0,1,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "9") (term "1,1,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                     (rule "mul_literals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " Case 2"
                  (rule "cl_lengthCons" (formula "9") (term "1") (userinteraction))
                  (rule "sub" (formula "11") (term "1,0") (userinteraction))
                  (rule "polySimp_addAssoc" (formula "11") (term "0") (userinteraction))
                  (rule "neg_literal" (formula "11") (term "1,0") (userinteraction))
                  (rule "polySimp_addComm1" (formula "11") (term "0") (userinteraction))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0") (userinteraction))
                  (rule "less_add_one" (formula "11") (userinteraction))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0") (userinteraction))
                  (rule "polySimp_addComm1" (formula "11") (term "0") (userinteraction))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0") (userinteraction))
                  (rule "add_literals" (formula "11") (term "0,0,0") (userinteraction))
                  (rule "add_zero_left" (formula "11") (term "0,0") (userinteraction))
                  (rule "polySimp_addComm0" (formula "11") (term "0") (userinteraction))
                  (rule "close" (formula "11") (ifseqformula "9") (userinteraction))
               )
            )
            (branch " Case 2"
               (rule "polySimp_elimSub" (formula "1") (term "1,0,1") (userinteraction))
               (rule "mul_literals" (formula "1") (term "1,1,0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "1,0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1") (userinteraction))
               (rule "polySimp_addComm1" (formula "1") (term "0,1") (userinteraction))
               (rule "polySimp_addComm1" (formula "1") (term "0,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
               (rule "polySimp_elimSub" (formula "12") (term "0,1"))
               (rule "mul_literals" (formula "12") (term "1,0,1"))
               (rule "polySimp_addComm1" (formula "12") (term "0,1"))
               (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
               (rule "close" (formula "12") (ifseqformula "1") (userinteraction))
            )
         )
         (branch " j_1 >  0 FALSE"
            (rule "cl_substring0" (formula "10") (term "1,0") (userinteraction))
            (rule "ifthenelse_split" (formula "10") (term "1,0") (userinteraction))
            (branch " k_1 >  0 TRUE"
               (rule "cl_charAtI" (formula "11") (term "0") (userinteraction))
               (rule "ifthenelse_split" (formula "11") (term "0") (userinteraction))
               (branch " i_2 >  0 TRUE"
                  (rule "cut" (inst "cutFormula=j_1 = 0") (userinteraction))
                  (branch " CUT: j_1 = 0 TRUE"
                     (rule "applyEqRigid" (formula "13") (term "1,0,0,1") (ifseqformula "1") (userinteraction))
                     (rule "add_zero_right" (formula "13") (term "0,0,1") (userinteraction))
                     (rule "instAll" (formula "13") (term "0,0") (ifseqformula "11") (userinteraction))
                     (rule "instAll" (formula "14") (term "0,1,0") (ifseqformula "1") (userinteraction))
                     (rule "hide_left" (formula "13") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "instAll" (formula "13") (term "1,1,0") (ifseqformula "1") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch " Case 1"
                        (rule "andRight" (formula "11") (userinteraction))
                        (branch " Case 1"
                           (rule "andRight" (formula "11") (userinteraction))
                           (branch " Case 1"
                              (rule "andRight" (formula "11") (userinteraction))
                              (branch " Case 1"
                                 (rule "andRight" (formula "11") (userinteraction))
                                 (branch " Case 1"
                                    (rule "sub_zero_2" (formula "11") (term "1") (userinteraction))
                                    (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "1") (userinteraction))
                                    (rule "sub_zero_2" (formula "5") (term "1") (userinteraction))
                                    (rule "less_add_one" (formula "11") (userinteraction))
                                    (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                                    (rule "mul_literals" (formula "11") (term "1,0,1"))
                                    (rule "polySimp_addLiterals" (formula "11") (term "1"))
                                    (rule "add_zero_right" (formula "11") (term "1"))
                                    (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_addLiterals" (formula "11") (term "0"))
                                    (rule "add_zero_right" (formula "11") (term "0"))
                                    (rule "close" (formula "11") (ifseqformula "5"))
                                 )
                                 (branch " Case 2"
                                    (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "1") (userinteraction))
                                    (rule "add_zero_right" (formula "4") (term "0") (userinteraction))
                                    (rule "hide_left" (formula "6") (userinteraction))
                                    (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "1") (userinteraction))
                                    (rule "geq_add_one" (formula "8") (userinteraction))
                                    (rule "polySimp_addComm0" (formula "8") (term "0") (userinteraction))
                                    (rule "sub" (formula "8") (term "1,0") (userinteraction))
                                    (rule "polySimp_addComm0" (formula "8") (term "1,0") (userinteraction))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0") (userinteraction))
                                    (rule "add_sub_elim_right" (formula "8") (term "0,0") (userinteraction))
                                    (rule "add_zero_left" (formula "8") (term "0") (userinteraction))
                                    (rule "add_zero_left" (formula "8") (term "1") (userinteraction))
                                    (rule "hide_left" (formula "7") (userinteraction))
                                    (rule "hide_left" (formula "6") (userinteraction))
                                    (rule "hide_left" (formula "5") (userinteraction))
                                    (rule "hide_left" (formula "4") (userinteraction))
                                    (rule "hide_left" (formula "3") (userinteraction))
                                    (rule "hide_right" (formula "4") (userinteraction))
                                    (rule "hide_right" (formula "4") (userinteraction))
                                    (rule "inEqSimp_geqRight" (formula "3"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "3"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (rule "concrete_and_2" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch " Case 2"
                                 (rule "qeq_literals" (formula "11") (userinteraction))
                                 (rule "closeTrue" (formula "11") (userinteraction))
                              )
                           )
                           (branch " Case 2"
                              (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "1") (userinteraction))
                              (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "1") (userinteraction))
                              (rule "qeq_literals" (formula "7") (userinteraction))
                              (rule "true_left" (formula "7") (userinteraction))
                              (rule "applyEqRigid" (formula "7") (term "1,0") (ifseqformula "1") (userinteraction))
                              (rule "add_zero_right" (formula "7") (term "0") (userinteraction))
                              (rule "hide_left" (formula "6") (userinteraction))
                              (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "1") (userinteraction))
                              (rule "sub_zero_2" (formula "5") (term "1") (userinteraction))
                              (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "1") (userinteraction))
                              (rule "add_zero_right" (formula "4") (term "0") (userinteraction))
                              (rule "cl_lengthCons" (formula "5") (term "1") (userinteraction))
                              (rule "inChar" (formula "6") (userinteraction))
                              (rule "true_left" (formula "6"))
                              (rule "polySimp_elimSub" (formula "8") (term "1,1,0"))
                              (rule "mul_literals" (formula "8") (term "1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "6") (term "0"))
                              (rule "mul_literals" (formula "6") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "8") (term "0,0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0"))
                              (rule "polySimp_elimSub" (formula "8") (term "0,1"))
                              (rule "mul_literals" (formula "8") (term "1,0,1"))
                              (rule "inEqSimp_gtRight" (formula "7"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_gtRight" (formula "7"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "4"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "5"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7"))
                              (rule "polySimp_addComm0" (formula "8") (term "1,1,0"))
                              (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "8") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0"))
                              (rule "add_zero_left" (formula "7") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "7") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                              (rule "applyEq" (formula "8") (term "1,1,1,0") (ifseqformula "4"))
                              (rule "add_literals" (formula "8") (term "1,1,0"))
                              (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (rule "concrete_and_2" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "inChar" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                           (rule "mul_literals" (formula "12") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "12") (term "1,1,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0"))
                           (rule "polySimp_elimSub" (formula "5") (term "1"))
                           (rule "polySimp_elimSub" (formula "10") (term "0"))
                           (rule "mul_literals" (formula "10") (term "1,0"))
                           (rule "inEqSimp_gtRight" (formula "11"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "5"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "3"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "9"))
                           (rule "inEqSimp_gtToGeq" (formula "4"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0"))
                           (rule "inEqSimp_ltRight" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "7"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                           (rule "applyEqRigid" (formula "6") (term "1,0") (ifseqformula "3"))
                           (rule "add_zero_right" (formula "6") (term "0"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "2"))
                           (rule "times_zero_2" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "2"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "applyEqRigid" (formula "7") (term "1,0,0") (ifseqformula "2"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (rule "concrete_or_1" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "cl_lengthCons" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0"))
                           (rule "add_zero_left" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                           (rule "andLeft" (formula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "add_zero_right" (formula "6") (term "0"))
                           (rule "leq_literals" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                     )
                     (branch " Case 2"
                        (rule "inChar" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "add_zero_right" (formula "1") (term "0,1"))
                        (rule "close" (formula "12") (ifseqformula "1"))
                     )
                  )
                  (branch " CUT: j_1 = 0 FALSE"
                     (rule "inChar" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "polySimp_elimSub" (formula "4") (term "1"))
                     (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                     (rule "mul_literals" (formula "12") (term "1,0,1"))
                     (rule "polySimp_elimSub" (formula "12") (term "1,1,0"))
                     (rule "mul_literals" (formula "12") (term "1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0"))
                     (rule "inEqSimp_gtRight" (formula "11"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "12") (term "1,1,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "mul_literals" (formula "8") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,0,1,1,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "11"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "11") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0"))
                     (rule "qeq_literals" (formula "11") (term "0"))
                     (rule "concrete_and_2" (formula "11"))
                     (rule "false_right" (formula "11"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                     (rule "concrete_and_2" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
               )
               (branch " i_2 >  0 FALSE"
                  (rule "inChar" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "polySimp_elimSub" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                  (rule "mul_literals" (formula "11") (term "1,0,1"))
                  (rule "polySimp_elimSub" (formula "3") (term "1"))
                  (rule "inEqSimp_gtRight" (formula "9"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtRight" (formula "10"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "4"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "8"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "5"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "5"))
                  (rule "times_zero_2" (formula "3") (term "1,1"))
                  (rule "add_zero_right" (formula "3") (term "1"))
                  (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "5"))
                  (rule "add_zero_right" (formula "8") (term "0,1"))
                  (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "5"))
                  (rule "add_zero_right" (formula "4") (term "0,1"))
                  (rule "applyEq" (formula "9") (term "1,0,0,1") (ifseqformula "4"))
                  (rule "add_zero_right" (formula "9") (term "0,0,1"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (rule "concrete_and_2" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch " k_1 >  0 FALSE"
               (rule "inChar" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "eqSymm" (formula "10"))
               (rule "polySimp_elimSub" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "2") (term "1"))
               (rule "polySimp_elimSub" (formula "10") (term "0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0"))
               (rule "inEqSimp_gtRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "9"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "9") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "3"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "8"))
               (rule "inEqSimp_gtToGeq" (formula "7"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
               (rule "mul_literals" (formula "7") (term "0,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,0,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "polySimp_elimOne" (formula "4") (term "0"))
               (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "times_zero_2" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "applyEqRigid" (formula "11") (term "1,0,0") (ifseqformula "6"))
               (rule "add_zero_right" (formula "11") (term "0,0"))
               (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "6"))
               (rule "add_zero_right" (formula "8") (term "1"))
               (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "6"))
               (rule "add_zero_right" (formula "9") (term "1"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
               (rule "leq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
               (rule "qeq_literals" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "5"))
               (rule "add_zero_right" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
               (rule "leq_literals" (formula "4") (term "0"))
               (rule "concrete_or_1" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
               (rule "qeq_literals" (formula "5") (term "0"))
               (rule "concrete_and_2" (formula "5"))
               (rule "closeFalse" (formula "5"))
            )
         )
      )
      (branch " i_2 + j_1 >  0 FALSE"
         (rule "cut" (inst "cutFormula=i_2 = 0 & j_1 = 0") (userinteraction))
         (branch " CUT: i_2 = 0 & j_1 = 0 TRUE"
            (rule "andLeft" (formula "1") (userinteraction))
            (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1") (userinteraction))
            (rule "applyEqRigid" (formula "11") (term "0,1,0") (ifseqformula "2") (userinteraction))
            (rule "cl_substring0" (formula "11") (term "1,0") (userinteraction))
            (rule "ifthenelse_split" (formula "11") (term "1,0") (userinteraction))
            (branch " k_1 >  0 TRUE"
               (rule "cl_charAt0" (formula "12") (term "0") (userinteraction))
               (rule "cl_charAt0" (formula "12") (term "1") (userinteraction))
               (rule "eqClose" (formula "12") (userinteraction))
               (rule "closeTrue" (formula "12") (userinteraction))
            )
            (branch " k_1 >  0 FALSE"
               (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "2") (userinteraction))
               (rule "closeAntec" (formula "6") (ifseqformula "11") (userinteraction))
            )
         )
         (branch " CUT: i_2 = 0 & j_1 = 0 FALSE"
            (rule "andRight" (formula "8") (userinteraction))
            (branch " Case 1"
               (rule "inChar" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "1") (term "1"))
               (rule "inEqSimp_gtRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "0,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0,1,1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "8"))
               (rule "add_zero_right" (formula "3") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "8") (ifseqformula "3"))
               (rule "times_zero_1" (formula "8") (term "1,0,0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "leq_literals" (formula "8") (term "0"))
               (rule "concrete_and_2" (formula "8"))
               (rule "false_right" (formula "8"))
               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
               (rule "times_zero_1" (formula "4") (term "0,0"))
               (rule "add_zero_left" (formula "4") (term "0"))
               (rule "inEqSimp_invertInEq1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "times_zero_2" (formula "4") (term "1"))
               (rule "polySimp_elimOne" (formula "4") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
               (rule "qeq_literals" (formula "3") (term "0"))
               (rule "concrete_and_2" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
            (branch " Case 2"
               (rule "inChar" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "1") (term "1"))
               (rule "inEqSimp_gtRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "0,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0,1,1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "8"))
               (rule "add_zero_right" (formula "4") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "8") (ifseqformula "4"))
               (rule "times_zero_1" (formula "8") (term "1,0,0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "leq_literals" (formula "8") (term "0"))
               (rule "concrete_and_2" (formula "8"))
               (rule "false_right" (formula "8"))
               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
               (rule "mul_literals" (formula "4") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "polySimp_elimOne" (formula "4") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
               (rule "qeq_literals" (formula "3") (term "0"))
               (rule "concrete_and_2" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
      )
   )
   (branch " Use Case"
      (rule "instAll" (formula "7") (term "1,1") (ifseqformula "1") (userinteraction))
      (rule "instAll" (formula "8") (term "0,0") (ifseqformula "1") (userinteraction))
      (rule "instAll" (formula "9") (term "0,1,0") (ifseqformula "1") (userinteraction))
      (rule "instAll" (formula "10") (term "1,1,0") (ifseqformula "1") (userinteraction))
      (rule "impLeft" (formula "1") (userinteraction))
      (branch " Case 1"
         (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "5"))
         (rule "concrete_and_1" (formula "10") (term "0,0,0"))
         (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "6"))
         (rule "concrete_and_1" (formula "10") (term "0,0"))
         (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "7"))
         (rule "concrete_and_1" (formula "10") (term "0"))
         (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "8"))
         (rule "concrete_and_1" (formula "10"))
         (rule "close" (formula "10") (ifseqformula "9"))
      )
      (branch " Case 2"
         (rule "close" (formula "11") (ifseqformula "1") (userinteraction))
      )
   )
)
(branch "   i_166 <  k_164 - j_165
& i_166 >= 0
& j_165 >= 0
& k_164 >  j_165
& i_166 + j_165 <  length(l_163) FALSE"
   (rule "eqClose" (formula "2") (userinteraction))
   (rule "closeTrue" (formula "2") (userinteraction))
)
)

}
