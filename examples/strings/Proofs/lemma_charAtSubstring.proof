\settings {
"#Proof-Settings-Config-File
#Sat Apr 11 18:33:40 CEST 2009
[DecisionProcedure]SmtBenchmarkArchiving=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[Model]Source=1
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_HIGH
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_LOW
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , throughout-throughout\:toutOn , assertions-assertions\:on , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[View]HideIntermediateProofsteps=false
[DecisionProcedureForTest]=Cogent
[SimultaneousUpdateSimplifier]EagerSimplification=true
[View]HideClosedSubtrees=false
[General]UseOCL=false
[DecisionProcedure]=SIMPLIFY
[Strategy]ActiveStrategy=JavaCardDLStrategy
[View]ShowWholeTaclet=false
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[DecisionProcedure]SmtZipProblemDir=false
[General]StupidMode=true
[General]UseJML=false
[General]DnDDirectionSensitive=true
[General]ProofAssistant=false
[View]FontIndex=2
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[DecisionProcedure]SmtUseQuantifiers=true
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=1000
[View]MaxTooltipLines=40
[General]SoundNotification=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , throughout-throughout\:toutOn-throughout\:toutOff , assertions-assertions\:on-assertions\:off-assertions\:safe , programRules-programRules\:Java-programRules\:ODL , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , initialisation-initialisation\:enableStaticInitialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff-javacard\:jcOn
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
"
}


\functions {
\nonRigid int i_65;
\nonRigid CharList l_62;
\nonRigid int k_63;
\nonRigid int j_64;
}

\problem {
  charAt(i_65, substring(j_64, k_63, l_62))
= \if (  i_65 <  k_63 - j_64
       & i_65 >= 0
       & j_64 >= 0
       & k_63 >  j_64
       & i_65 + j_64 <  length(l_62))
      \then (charAt(i_65 + j_64, l_62))
      \else (charAt(i_65, substring(j_64, k_63, l_62)))

}

\proof {
(keyLog "0" (keyUser "geilmann" ) (keyVersion "fb65e9b19068cfc132748bf3c241b00bc338cee3"))

(autoModeTime "25328")

(branch "dummy ID"
(rule "cl_induct" (inst "phi=\\forall int i; 
  \\forall int j; 
    \\forall int k; 
      (     i <  k - j
          & j >= 0
          & k >  j
          & i + j <  length(lv)
          & i >= 0
       ->   charAt(i + j, lv)
          = charAt(i, substring(j, k, lv)))") (inst "lv=lv") (inst "cv=cv") (userinteraction))
(branch " Base Case"
   (rule "allRight" (formula "1") (inst "sk=i_0") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=j_0") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=k_0") (userinteraction))
   (rule "impRight" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "eqSymm" (formula "6"))
   (rule "eqSymm" (formula "7"))
   (rule "polySimp_elimSub" (formula "1") (term "1"))
   (rule "polySimp_elimSub" (formula "7") (term "1,0,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
   (rule "inEqSimp_gtToGeq" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "1"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
   (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1"))
   (rule "polySimp_rightDist" (formula "3") (term "1"))
   (rule "mul_literals" (formula "3") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,0,0,0"))
   (rule "commute_and" (formula "7") (term "0,0,0,0,0"))
   (rule "commute_and_2" (formula "7") (term "0,0,0,0"))
   (rule "commute_and_2" (formula "7") (term "0,0,0"))
   (rule "lemma_length0" (newnames "L_0"))
   (rule "eqClose" (formula "1") (term "1") (matchconstraint "L_0=empty"))
   (rule "concrete_impl_4" (formula "1") (matchconstraint "L_0=empty"))
   (rule "true_left" (formula "1") (matchconstraint "L_0=empty"))
   (rule "cl_charAtHead" (newnames "I_0"))
   (rule "lemma_lengthNEq" (newnames "L1_0,L2_0"))
   (rule "eqClose" (formula "1") (term "0,0") (matchconstraint "L2_0=L1_0"))
   (rule "eqClose" (formula "2") (term "0,1") (matchconstraint "L2_0=L1_0"))
   (rule "concrete_not_1" (formula "1") (term "0") (matchconstraint "L2_0=L1_0"))
   (rule "eqClose" (formula "1") (term "0,1") (matchconstraint "L2_0=L1_0"))
   (rule "eqClose" (formula "2") (term "0,0") (matchconstraint "L2_0=L1_0"))
   (rule "concrete_not_1" (formula "2") (term "1") (matchconstraint "L2_0=L1_0"))
   (rule "concrete_impl_2" (formula "1") (matchconstraint "L2_0=L1_0"))
   (rule "concrete_not_1" (formula "2") (term "0") (matchconstraint "L2_0=L1_0"))
   (rule "true_left" (formula "1") (matchconstraint "L2_0=L1_0"))
   (rule "eq_imp" (formula "1") (matchconstraint "L2_0=L1_0"))
   (rule "true_left" (formula "1") (matchconstraint "L2_0=L1_0"))
   (rule "eqSymm" (formula "1") (term "0,1"))
   (rule "eqClose" (formula "1") (term "0,1") (matchconstraint "L2_0=L1_0"))
   (rule "eqClose" (formula "1") (term "0,0") (matchconstraint "L2_0=L1_0"))
   (rule "concrete_not_1" (formula "1") (term "1") (matchconstraint "L2_0=L1_0"))
   (rule "concrete_not_1" (formula "1") (term "0") (matchconstraint "L2_0=L1_0"))
   (rule "eq_imp" (formula "1") (matchconstraint "L2_0=L1_0"))
   (rule "true_left" (formula "1") (matchconstraint "L2_0=L1_0"))
   (rule "eqSymm" (formula "1") (term "0,0"))
   (rule "eqClose" (formula "1") (term "0,0") (matchconstraint "L2_0=L1_0"))
   (rule "concrete_not_1" (formula "1") (term "0") (matchconstraint "L2_0=L1_0"))
   (rule "eqClose" (formula "1") (term "0,1") (matchconstraint "L2_0=L1_0"))
   (rule "concrete_impl_2" (formula "1") (matchconstraint "L2_0=L1_0"))
   (rule "true_left" (formula "1") (matchconstraint "L2_0=L1_0"))
   (rule "lemma_charAtEmpty" (newnames "I_1,J_0"))
   (rule "eqClose" (formula "1") (matchconstraint "J_0=I_1"))
   (rule "true_left" (formula "1") (matchconstraint "J_0=I_1"))
   (rule "eqSymm" (formula "1"))
   (rule "eqClose" (formula "1") (matchconstraint "J_0=I_1"))
   (rule "true_left" (formula "1") (matchconstraint "J_0=I_1"))
   (rule "lemma_lengthGEq0" (newnames "L_1"))
   (rule "lemma_substringGtLength" (formula "11") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "11") (term "0,1,0"))
   (rule "lemma_charAtLt0" (formula "11") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1"))
   (rule "lemma_substringLt0" (formula "12") (term "1,1"))
   (rule "eqSymm" (formula "12"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
   (rule "mul_literals" (formula "12") (term "1,0,1,0"))
   (rule "cl_lengthEmpty" (formula "9") (term "0"))
   (rule "inEqSimp_homoInEq1" (formula "9"))
   (rule "times_zero_2" (formula "9") (term "1,0"))
   (rule "add_zero_right" (formula "9") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9"))
   (rule "polySimp_mulComm0" (formula "9") (term "1"))
   (rule "polySimp_rightDist" (formula "9") (term "1"))
   (rule "mul_literals" (formula "9") (term "0,1"))
   (rule "inEqSimp_subsumption0" (formula "11") (term "0,1") (ifseqformula "9"))
   (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,1"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
   (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,1"))
   (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,0,1"))
   (rule "add_literals" (formula "11") (term "1,1,0,0,0,1"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0,1"))
   (rule "add_zero_right" (formula "11") (term "0,0,0,1"))
   (rule "qeq_literals" (formula "11") (term "0,0,1"))
   (rule "concrete_or_1" (formula "11") (term "0,1"))
   (rule "ifthenelse_true" (formula "11") (term "1"))
   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
   (rule "times_zero_1" (formula "7") (term "0,0"))
   (rule "add_zero_left" (formula "7") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
   (rule "polySimp_elimOne" (formula "7") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "11"))
   (rule "qeq_literals" (formula "7") (term "0"))
   (rule "concrete_and_2" (formula "7"))
   (rule "closeFalse" (formula "7"))
)
(branch " Step Case"
   (rule "hide_right" (formula "2") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=lv_0") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=cv_0") (userinteraction))
   (rule "impRight" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "hide_left" (formula "1") (userinteraction))
   (rule "allRight" (formula "2") (inst "sk=i_1") (userinteraction))
   (rule "allRight" (formula "2") (inst "sk=j_1") (userinteraction))
   (rule "allRight" (formula "2") (inst "sk=k_1") (userinteraction))
   (rule "impRight" (formula "2") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "cl_lengthCons" (formula "4") (term "1") (userinteraction))
   (rule "cl_substringI" (formula "7") (term "1,1") (userinteraction))
   (rule "ifthenelse_split" (formula "7") (term "1,1") (userinteraction))
   (branch " j_1 >  0 TRUE"
      (rule "cl_charAtI" (formula "8") (term "0") (userinteraction))
      (rule "ifthenelse_split" (formula "8") (term "0") (userinteraction))
      (branch " i_1 + j_1 >  0 TRUE"
         (rule "instAll" (formula "9") (term "0,1") (ifseqformula "8") (userinteraction))
         (rule "instAll" (formula "10") (term "0,1,1") (ifseqformula "1") (userinteraction))
         (rule "instAll" (formula "11") (term "1,1,1") (ifseqformula "1") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch " Case 1"
            (rule "eqSymm" (formula "12"))
            (rule "eqSymm" (formula "10") (term "1,0,0,0"))
            (rule "eqSymm" (formula "2") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0"))
            (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "9"))
            (rule "concrete_and_3" (formula "2") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "9"))
            (rule "concrete_and_3" (formula "1") (term "0,0"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
            (rule "concrete_and_3" (formula "11"))
            (rule "polySimp_elimSub" (formula "10") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "5") (term "1"))
            (rule "polySimp_elimSub" (formula "12") (term "1,1,0"))
            (rule "mul_literals" (formula "12") (term "1,1,1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1"))
            (rule "mul_literals" (formula "12") (term "1,0,1"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1,0"))
            (rule "mul_literals" (formula "12") (term "1,0,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "0,1,0,1,0"))
            (rule "mul_literals" (formula "1") (term "1,0,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,0"))
            (rule "mul_literals" (formula "1") (term "1,1,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "2") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "1") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "1,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimSub" (formula "11") (term "1,0,1"))
            (rule "mul_literals" (formula "11") (term "1,1,0,1"))
            (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
            (rule "mul_literals" (formula "11") (term "1,1,1,0"))
            (rule "polySimp_elimSub" (formula "11") (term "0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "11") (term "0,1,0"))
            (rule "mul_literals" (formula "11") (term "1,0,1,0"))
            (rule "polySimp_elimSub" (formula "11") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,1,0,0,0"))
            (rule "polySimp_elimSub" (formula "1") (term "0,1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8"))
            (rule "inEqSimp_gtToGeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "7"))
            (rule "inEqSimp_gtToGeq" (formula "4"))
            (rule "times_zero_1" (formula "4") (term "1,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0"))
            (rule "polySimp_elimSub" (formula "11") (term "1,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "2") (term "1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "5"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1"))
            (rule "polySimp_addComm0" (formula "12") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,1,0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "4"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0"))
            (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "4"))
            (rule "concrete_and_3" (formula "11") (term "0,0"))
            (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1"))
            (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1,1,1,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,1,1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,1,1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "1,0,1"))
            (rule "polySimp_addComm1" (formula "11") (term "0,1"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0"))
            (rule "polySimp_addComm0" (formula "8") (term "0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0"))
            (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "7"))
            (rule "concrete_and_3" (formula "11") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,0,1,0,0"))
            (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "8"))
            (rule "concrete_and_3" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
            (rule "add_zero_left" (formula "11") (term "0,0,0,1"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "8"))
            (rule "concrete_and_3" (formula "11"))
            (rule "inEqSimp_leqRight" (formula "11"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "2") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "1") (term "1,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "mul_literals" (formula "8") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,1,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,0,1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "0,1,1,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,0,1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
            (rule "polySimp_elimOne" (formula "9") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch " Case 2"
            (rule "eqSymm" (formula "12") (userinteraction))
            (rule "eqSymm" (formula "11") (term "1,0,0,0"))
            (rule "eqSymm" (formula "3") (term "1,0,0"))
            (rule "eqSymm" (formula "2") (term "1,0"))
            (rule "eqSymm" (formula "1"))
            (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "10"))
            (rule "concrete_and_3" (formula "3") (term "0,0,0"))
            (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "10"))
            (rule "concrete_and_3" (formula "2") (term "0,0"))
            (rule "polySimp_elimSub" (formula "12") (term "1,1,0"))
            (rule "mul_literals" (formula "12") (term "1,1,1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1,0"))
            (rule "mul_literals" (formula "12") (term "1,0,1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1"))
            (rule "mul_literals" (formula "12") (term "1,0,1"))
            (rule "polySimp_elimSub" (formula "11") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "6") (term "1"))
            (rule "polySimp_elimSub" (formula "2") (term "1,0,1,1,0"))
            (rule "mul_literals" (formula "2") (term "1,1,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "2") (term "0,1,0,1,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "1,1,0"))
            (rule "mul_literals" (formula "1") (term "1,1,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
            (rule "mul_literals" (formula "1") (term "1,0,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "1,0,1"))
            (rule "mul_literals" (formula "1") (term "1,1,0,1"))
            (rule "polySimp_elimSub" (formula "3") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "2") (term "1,0,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "2") (term "0,1,0,0,0,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "2") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimSub" (formula "2") (term "1,0,1,0,0"))
            (rule "mul_literals" (formula "2") (term "1,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "2") (term "0,1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "2") (term "1,0,1,1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "9"))
            (rule "inEqSimp_gtToGeq" (formula "4"))
            (rule "times_zero_1" (formula "4") (term "1,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "5"))
            (rule "times_zero_1" (formula "5") (term "1,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "8"))
            (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "3") (term "1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "6"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "2") (term "1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,1"))
            (rule "polySimp_addComm0" (formula "2") (term "1,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,1,0,0,0,0"))
            (rule "replace_known_left" (formula "2") (term "1,0,0,0,0") (ifseqformula "5"))
            (rule "concrete_and_3" (formula "2") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,1,1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,1,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,1,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
            (rule "close" (formula "12") (ifseqformula "1"))
         )
      )
      (branch " i_1 + j_1 >  0 FALSE"
         (rule "eqSymm" (formula "7") (term "1,0,0,0"))
         (rule "eqSymm" (formula "9"))
         (rule "polySimp_elimSub" (formula "2") (term "1"))
         (rule "polySimp_elimSub" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "9") (term "1,1,0"))
         (rule "mul_literals" (formula "9") (term "1,1,1,0"))
         (rule "polySimp_elimSub" (formula "9") (term "0,1,0"))
         (rule "mul_literals" (formula "9") (term "1,0,1,0"))
         (rule "inEqSimp_gtRight" (formula "8"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "2"))
         (rule "times_zero_1" (formula "2") (term "1,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "6"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "8") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "9") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
         (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0"))
         (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
         (rule "mul_literals" (formula "6") (term "0,1,0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
         (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
         (rule "add_literals" (formula "6") (term "0,0,0"))
         (rule "add_zero_left" (formula "6") (term "0,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0"))
         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1"))
         (rule "polySimp_rightDist" (formula "5") (term "1"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
         (rule "mul_literals" (formula "5") (term "0,1"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "0,1,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,0,1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,0,1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
         (rule "leq_literals" (formula "4") (term "0"))
         (rule "concrete_or_1" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
         (rule "mul_literals" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
         (rule "qeq_literals" (formula "2") (term "0"))
         (rule "concrete_and_2" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
   )
   (branch " j_1 >  0 FALSE"
      (rule "cut" (inst "cutFormula=j_1 = 0") (userinteraction))
      (branch " CUT: j_1 = 0 TRUE"
         (rule "applyEqRigid" (formula "9") (term "1,0,0") (ifseqformula "1") (userinteraction))
         (rule "add_zero_right" (formula "9") (term "0,0") (userinteraction))
         (rule "cl_charAtI" (formula "9") (term "0") (userinteraction))
         (rule "ifthenelse_split" (formula "9") (term "0") (userinteraction))
         (branch " i_1 >  0 TRUE"
            (rule "cl_substring0" (formula "10") (term "1,1") (userinteraction))
            (rule "ifthenelse_split" (formula "10") (term "1,1") (userinteraction))
            (branch " k_1 >  0 TRUE"
               (rule "cl_charAtI" (formula "11") (term "1") (userinteraction))
               (rule "ifthenelse_split" (formula "11") (term "1") (userinteraction))
               (branch " i_1 >  0 TRUE"
                  (rule "instAll" (formula "11") (term "0,0") (ifseqformula "9") (userinteraction))
                  (rule "instAll" (formula "12") (term "0,1,1") (ifseqformula "1") (userinteraction))
                  (rule "instAll" (formula "13") (term "1,1,1") (ifseqformula "1") (userinteraction))
                  (rule "impLeft" (formula "1") (userinteraction))
                  (branch " Case 1"
                     (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                     (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                     (rule "qeq_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,1,0"))
                     (rule "qeq_literals" (formula "12") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "12") (term "0,0,0"))
                     (rule "eqSymm" (formula "11") (term "1,0,0,0"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "eqSymm" (formula "14"))
                     (rule "eqSymm" (formula "1") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                     (rule "mul_literals" (formula "12") (term "1,0,1"))
                     (rule "polySimp_elimSub" (formula "12") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "2") (term "0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "2") (term "0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "6") (term "1"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "2") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "2") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "times_zero_2" (formula "1") (term "1,1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "0,1,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "1,0,0,0"))
                     (rule "times_zero_2" (formula "12") (term "1,1,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "2") (term "0,0,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "2") (term "0,0,1,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "14") (term "0,1"))
                     (rule "mul_literals" (formula "14") (term "1,0,1"))
                     (rule "polySimp_elimSub" (formula "14") (term "1,1,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,1,1,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,1,1,0"))
                     (rule "inEqSimp_gtRight" (formula "13"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "9"))
                     (rule "inEqSimp_gtToGeq" (formula "3") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "12") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10"))
                     (rule "inEqSimp_gtToGeq" (formula "5"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "2") (term "1,0,0,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,1"))
                     (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "5"))
                     (rule "concrete_and_3" (formula "13"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,1,0,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "5"))
                     (rule "concrete_and_3" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "5"))
                     (rule "concrete_and_3" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "1,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,1,0,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "1,0,1"))
                     (rule "polySimp_addComm0" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "2") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "6"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "5"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "6"))
                     (rule "concrete_and_1" (formula "11") (term "0"))
                     (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "5"))
                     (rule "times_zero_2" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "applyEqRigid" (formula "7") (term "1,0,0") (ifseqformula "5"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                     (rule "concrete_and_3" (formula "1") (term "0,0"))
                     (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "7"))
                     (rule "concrete_and_3" (formula "10"))
                     (rule "inEqSimp_geqRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "mul_literals" (formula "5") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,0,1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "5"))
                     (rule "leq_literals" (formula "9") (term "0"))
                     (rule "concrete_or_1" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "applyEqRigid" (formula "9") (term "1,1,1,0") (ifseqformula "3"))
                     (rule "add_literals" (formula "9") (term "1,1,0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "add_zero_left" (formula "6") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                     (rule "concrete_and_2" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
                  (branch " Case 2"
                     (rule "add_zero_right" (formula "1") (term "0,0") (userinteraction))
                     (rule "close" (formula "14") (ifseqformula "1") (userinteraction))
                  )
               )
               (branch " i_1 >  0 FALSE"
                  (rule "close" (formula "11") (ifseqformula "2"))
               )
            )
            (branch " k_1 >  0 FALSE"
               (rule "eqSymm" (formula "8") (term "1,0,0,0"))
               (rule "polySimp_elimSub" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "3") (term "1"))
               (rule "polySimp_elimSub" (formula "11") (term "0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0"))
               (rule "inEqSimp_gtRight" (formula "10"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "10"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "8"))
               (rule "inEqSimp_gtToGeq" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "3"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_addComm0" (formula "11") (term "0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "polySimp_addComm1" (formula "5") (term "0,0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "applyEqRigid" (formula "6") (term "1,0,0") (ifseqformula "3"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
               (rule "times_zero_2" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "3"))
               (rule "add_zero_right" (formula "4") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "8") (term "0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "polySimp_elimOne" (formula "4") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (rule "concrete_and_2" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch " i_1 >  0 FALSE"
            (rule "cut" (inst "cutFormula=i_1 = 0") (userinteraction))
            (branch " CUT: i_1 = 0 TRUE"
               (rule "applyEqRigid" (formula "11") (term "0,1") (ifseqformula "1") (userinteraction))
               (rule "cl_substring0" (formula "11") (term "1,1") (userinteraction))
               (rule "ifthenelse_split" (formula "11") (term "1,1") (userinteraction))
               (branch " k_1 >  0 TRUE"
                  (rule "cl_charAt0" (formula "12") (term "1") (userinteraction))
                  (rule "cl_charAt0" (formula "12") (term "0") (userinteraction))
                  (rule "eqClose" (formula "12") (userinteraction))
                  (rule "closeTrue" (formula "12") (userinteraction))
               )
               (branch " k_1 >  0 FALSE"
                  (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "3") (term "1"))
                  (rule "inEqSimp_gtRight" (formula "11"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtRight" (formula "11"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtRight" (formula "11"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "11") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9"))
                  (rule "inEqSimp_gtToGeq" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
                  (rule "times_zero_2" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "3"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "3"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "2"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "2"))
                  (rule "add_zero_left" (formula "6") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_invertInEq0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "times_zero_2" (formula "5") (term "1"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_and_2" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
            )
            (branch " CUT: i_1 = 0 FALSE"
               (rule "eqSymm" (formula "11"))
               (rule "eqSymm" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_elimSub" (formula "2") (term "1"))
               (rule "polySimp_elimSub" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_gtRight" (formula "10"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "10"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "9") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "2"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
               (rule "times_zero_2" (formula "4") (term "1,0,0"))
               (rule "add_literals" (formula "4") (term "0,0"))
               (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "2"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "polySimp_elimOne" (formula "5") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "8"))
               (rule "add_zero_right" (formula "1") (term "1"))
               (rule "inEqSimp_contradEq3" (formula "8") (ifseqformula "1"))
               (rule "times_zero_1" (formula "8") (term "1,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0"))
               (rule "qeq_literals" (formula "8") (term "0"))
               (rule "concrete_and_2" (formula "8"))
               (rule "false_right" (formula "8"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
               (rule "qeq_literals" (formula "6") (term "0"))
               (rule "concrete_and_2" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
      )
      (branch " CUT: j_1 = 0 FALSE"
         (rule "eqSymm" (formula "6") (term "1,0,0,0"))
         (rule "eqSymm" (formula "9"))
         (rule "polySimp_elimSub" (formula "6") (term "1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1"))
         (rule "inEqSimp_gtRight" (formula "8"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "5"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "2"))
         (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0"))
         (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
         (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
         (rule "add_literals" (formula "5") (term "0,0,0"))
         (rule "add_zero_left" (formula "5") (term "0,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
         (rule "polySimp_mulComm0" (formula "4") (term "1"))
         (rule "polySimp_rightDist" (formula "4") (term "1"))
         (rule "mul_literals" (formula "4") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "0,1,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,0,1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "5"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
         (rule "polySimp_elimOne" (formula "5") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "8"))
         (rule "add_zero_right" (formula "1") (term "1"))
         (rule "inEqSimp_contradEq3" (formula "8") (ifseqformula "1"))
         (rule "times_zero_1" (formula "8") (term "1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "qeq_literals" (formula "8") (term "0"))
         (rule "concrete_and_2" (formula "8"))
         (rule "false_right" (formula "8"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
         (rule "qeq_literals" (formula "1") (term "0"))
         (rule "concrete_and_2" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch " Use Case"
   (rule "instAll" (formula "2") (term "2,1,2,1") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "3") (term "0,0,1,1") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "4") (term "1,0,1,1") (ifseqformula "1") (userinteraction))
   (rule "instAll" (formula "5") (term "1,1,2,1") (ifseqformula "1") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch " Case 1"
      (rule "ifthenelse_split" (formula "6") (term "1") (userinteraction))
      (branch "   i_65 <  k_63 - j_64
& i_65 >= 0
& j_64 >= 0
& k_63 >  j_64
& i_65 + j_64 <  length(l_62) TRUE"
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
         (rule "eqSymm" (formula "8") (term "1,0,0,0"))
         (rule "eqSymm" (formula "7") (term "1,0,0"))
         (rule "eqSymm" (formula "6") (term "1,0"))
         (rule "replace_known_left" (formula "7") (term "1,0,0,0") (ifseqformula "2"))
         (rule "concrete_and_3" (formula "7") (term "0,0,0"))
         (rule "replace_known_left" (formula "6") (term "1,0,0,0") (ifseqformula "5"))
         (rule "concrete_and_3" (formula "6") (term "0,0,0"))
         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
         (rule "concrete_and_3" (formula "6") (term "0,0"))
         (rule "replace_known_left" (formula "6") (term "1,0,0,0") (ifseqformula "3"))
         (rule "concrete_and_3" (formula "6") (term "0,0,0"))
         (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
         (rule "concrete_and_1" (formula "10") (term "0,0,0"))
         (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
         (rule "concrete_and_1" (formula "10") (term "0,0"))
         (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "4"))
         (rule "concrete_and_1" (formula "10") (term "0"))
         (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "5"))
         (rule "concrete_and_1" (formula "10"))
         (rule "close" (formula "10") (ifseqformula "2"))
      )
      (branch "   i_65 <  k_63 - j_64
& i_65 >= 0
& j_64 >= 0
& k_63 >  j_64
& i_65 + j_64 <  length(l_62) FALSE"
         (rule "eqClose" (formula "7"))
         (rule "closeTrue" (formula "7"))
      )
   )
   (branch " Case 2"
      (rule "ifthenelse_split" (formula "6") (term "1") (userinteraction))
      (branch "   i_65 <  k_63 - j_64
& i_65 >= 0
& j_64 >= 0
& k_63 >  j_64
& i_65 + j_64 <  length(l_62) TRUE"
         (rule "eqSymm" (formula "7") (userinteraction))
         (rule "close" (formula "7") (ifseqformula "2") (userinteraction))
      )
      (branch "   i_65 <  k_63 - j_64
& i_65 >= 0
& j_64 >= 0
& k_63 >  j_64
& i_65 + j_64 <  length(l_62) FALSE"
         (rule "eqClose" (formula "7") (userinteraction))
         (rule "closeTrue" (formula "7") (userinteraction))
      )
   )
)
)

}
