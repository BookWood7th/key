\settings {
"#Proof-Settings-Config-File
#Sun Apr 05 21:53:02 CEST 2009
[DecisionProcedure]SmtBenchmarkArchiving=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[Model]Source=1
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_HIGH
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_HIGH
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_LOW
[Choice]DefaultChoices=throughout-throughout\:toutOn , transactions-transactions\:transactionsOn , assertions-assertions\:on , intRules-intRules\:arithmeticSemanticsIgnoringOF , programRules-programRules\:Java , initialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[View]HideIntermediateProofsteps=false
[DecisionProcedureForTest]=Cogent
[SimultaneousUpdateSimplifier]EagerSimplification=true
[View]HideClosedSubtrees=false
[General]UseOCL=false
[DecisionProcedure]=SIMPLIFY
[Strategy]ActiveStrategy=JavaCardDLStrategy
[View]ShowWholeTaclet=false
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[DecisionProcedure]SmtZipProblemDir=false
[General]StupidMode=true
[General]UseJML=false
[General]DnDDirectionSensitive=true
[General]ProofAssistant=false
[View]FontIndex=2
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[DecisionProcedure]SmtUseQuantifiers=true
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=300
[View]MaxTooltipLines=40
[General]SoundNotification=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[Choice]Choices=throughout-throughout\:toutOn-throughout\:toutOff , transactions-transactions\:transactionsOn-transactions\:transactionsOff , assertions-assertions\:on-assertions\:off-assertions\:safe , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , programRules-programRules\:Java-programRules\:ODL , initialisation-initialisation\:enableStaticInitialisation-initialisation\:disableStaticInitialisation , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff-javacard\:jcOn
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
"
}


\functions {
\nonRigid int m_7;
\nonRigid CharList l_6;
\nonRigid int i_10;
\nonRigid int k_8;
\nonRigid int j_9;
}

\problem {
  substring(i_10, j_9, substring(k_8, m_7, l_6))
= \if (i_10 >= 0 & k_8 >= 0 & m_7 >= k_8 + j_9)
      \then (substring(i_10 + k_8, k_8 + j_9, l_6))
      \else (substring(i_10,
                       j_9,
                       substring(k_8, m_7, l_6)))

}

\proof {
(keyLog "0" (keyUser "geilmann" ) (keyVersion "fb65e9b19068cfc132748bf3c241b00bc338cee3"))

(autoModeTime "27022")

(branch "dummy ID"
(rule "cl_induct" (inst "phi=\\forall int i; 
  \\forall int j; 
    \\forall int k; 
      \\forall int m; 
        (   i >= 0 & k >= 0 & m >= k + j
         ->   substring(i + k, k + j, lv)
            = substring(i, j, substring(k, m, lv)))") (inst "lv=lv") (inst "cv=cv") (userinteraction))
(branch " Base Case"
   (rule "allRight" (formula "1") (inst "sk=i_1") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=j_1") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=k_1") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=m_1") (userinteraction))
   (rule "impRight" (formula "1") (userinteraction))
   (rule "cl_substringEmpty" (formula "2") (term "0") (userinteraction))
   (rule "cl_substringEmpty" (formula "2") (term "2,1") (userinteraction))
   (rule "cl_substringEmpty" (formula "2") (term "1") (userinteraction))
   (rule "eqClose" (formula "2") (userinteraction))
   (rule "closeTrue" (formula "2") (userinteraction))
)
(branch " Step Case"
   (rule "hide_right" (formula "2") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=lv_0") (userinteraction))
   (rule "allRight" (formula "1") (inst "sk=cv_0") (userinteraction))
   (rule "impRight" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "allRight" (formula "3") (inst "sk=i_2") (userinteraction))
   (rule "allRight" (formula "3") (inst "sk=j_2") (userinteraction))
   (rule "allRight" (formula "3") (inst "sk=k_2") (userinteraction))
   (rule "allRight" (formula "3") (inst "sk=m_2") (userinteraction))
   (rule "impRight" (formula "3") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "andLeft" (formula "1") (userinteraction))
   (rule "cl_substringI" (formula "6") (term "0") (userinteraction))
   (rule "ifthenelse_split" (formula "6") (term "0") (userinteraction))
   (branch " i_2 + k_2 >  0 TRUE"
      (rule "cl_substringI" (formula "7") (term "2,1") (userinteraction))
      (rule "ifthenelse_split" (formula "7") (term "2,1") (userinteraction))
      (branch " k_2 >  0 TRUE"
         (rule "instAll" (formula "8") (term "0,1") (ifseqformula "7") (userinteraction))
         (rule "hide_left" (formula "8") (userinteraction))
         (rule "instAll" (formula "8") (term "1,1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "instAll" (formula "8") (term "0,2,1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "instAll" (formula "8") (term "1,2,1") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "2") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch " Case 1"
            (rule "andRight" (formula "7") (userinteraction))
            (branch " Case 1"
               (rule "andRight" (formula "7") (userinteraction))
               (branch " Case 1"
                  (rule "inChar" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "close" (formula "6") (ifseqformula "3"))
               )
               (branch " Case 2"
                  (rule "inChar" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,2,1"))
                  (rule "mul_literals" (formula "7") (term "1,0,2,1"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "0,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,2,1"))
                  (rule "mul_literals" (formula "7") (term "1,1,2,1"))
                  (rule "polySimp_elimSub" (formula "6") (term "0"))
                  (rule "mul_literals" (formula "6") (term "1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "2"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "6"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "1"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,2,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,2,1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_and_2" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch " Case 2"
               (rule "inChar" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "polySimp_elimSub" (formula "7") (term "1,2,1"))
               (rule "mul_literals" (formula "7") (term "1,1,2,1"))
               (rule "polySimp_elimSub" (formula "7") (term "1,0"))
               (rule "mul_literals" (formula "7") (term "1,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "0"))
               (rule "mul_literals" (formula "6") (term "1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "0,1"))
               (rule "mul_literals" (formula "6") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0"))
               (rule "eqSymm" (formula "7"))
               (rule "polySimp_elimSub" (formula "7") (term "0,2,0"))
               (rule "mul_literals" (formula "7") (term "1,0,2,0"))
               (rule "eqSymm" (formula "7"))
               (rule "inEqSimp_geqRight" (formula "6"))
               (rule "inEqSimp_gtToGeq" (formula "2"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "inEqSimp_gtToGeq" (formula "3"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "1"))
               (rule "polySimp_addComm0" (formula "7") (term "0,2,1"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "1,2,1"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1"))
               (rule "mul_literals" (formula "1") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
         (branch " Case 2"
            (rule "inChar" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "polySimp_elimSub" (formula "1") (term "1,2,1"))
            (rule "mul_literals" (formula "1") (term "1,1,2,1"))
            (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
            (rule "mul_literals" (formula "1") (term "1,0,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "1,1,0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_elimSub" (formula "7") (term "0,2,1"))
            (rule "mul_literals" (formula "7") (term "1,0,2,1"))
            (rule "polySimp_elimSub" (formula "7") (term "1,2,1"))
            (rule "mul_literals" (formula "7") (term "1,1,2,1"))
            (rule "polySimp_elimSub" (formula "7") (term "0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "7") (term "1,0"))
            (rule "mul_literals" (formula "7") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "0,2,0"))
            (rule "mul_literals" (formula "1") (term "1,0,2,0"))
            (rule "eqSymm" (formula "1"))
            (rule "inEqSimp_gtToGeq" (formula "2"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "6") (term "1"))
            (rule "polySimp_addComm0" (formula "7") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,2,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_addComm0" (formula "7") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "1") (term "1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
            (rule "close" (formula "7") (ifseqformula "1"))
         )
      )
      (branch " k_2 >  0 FALSE"
         (rule "cl_substring0" (formula "8") (term "2,1") (userinteraction))
         (rule "ifthenelse_split" (formula "8") (term "2,1") (userinteraction))
         (branch " m_2 >  0 TRUE"
            (rule "cl_substringI" (formula "9") (term "1") (userinteraction))
            (rule "ifthenelse_split" (formula "9") (term "1") (userinteraction))
            (branch " i_2 >  0 TRUE"
               (rule "cut" (inst "cutFormula=k_2 = 0") (userinteraction))
               (branch " CUT: k_2 = 0 TRUE"
                  (rule "applyEqRigid" (formula "11") (term "1,0,0,0") (ifseqformula "1") (userinteraction))
                  (rule "applyEqRigid" (formula "11") (term "0,0,1,0") (ifseqformula "1") (userinteraction))
                  (rule "instAll" (formula "11") (term "0,1") (ifseqformula "9") (userinteraction))
                  (rule "hide_left" (formula "10") (userinteraction))
                  (rule "instAll" (formula "11") (term "1,1") (ifseqformula "1") (userinteraction))
                  (rule "hide_left" (formula "2") (userinteraction))
                  (rule "instAll" (formula "11") (term "0,2,1") (ifseqformula "1") (userinteraction))
                  (rule "hide_left" (formula "2") (userinteraction))
                  (rule "instAll" (formula "11") (term "1,2,1") (ifseqformula "1") (userinteraction))
                  (rule "impLeft" (formula "1") (userinteraction))
                  (branch " Case 1"
                     (rule "andRight" (formula "10") (userinteraction))
                     (branch " Case 1"
                        (rule "andRight" (formula "10") (userinteraction))
                        (branch " Case 1"
                           (rule "inChar" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "add_zero_left" (formula "1") (term "1,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                           (rule "qeq_literals" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,1,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "11"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "9"))
                           (rule "concrete_and_2" (formula "1") (term "0,0"))
                           (rule "concrete_impl_2" (formula "1") (term "0"))
                           (rule "polySimp_elimSub" (formula "9") (term "0"))
                           (rule "mul_literals" (formula "9") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                           (rule "mul_literals" (formula "11") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                           (rule "mul_literals" (formula "11") (term "1,1,0"))
                           (rule "polySimp_elimSub" (formula "11") (term "1,2,0"))
                           (rule "mul_literals" (formula "11") (term "1,1,2,0"))
                           (rule "polySimp_elimSub" (formula "11") (term "1,1"))
                           (rule "mul_literals" (formula "11") (term "1,1,1"))
                           (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0"))
                           (rule "inEqSimp_gtRight" (formula "10"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "5"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "4"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "6"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "10"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "1"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "1,2,0"))
                           (rule "polySimp_addComm0" (formula "11") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "4"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "3"))
                           (rule "add_zero_right" (formula "8") (term "1"))
                           (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (rule "concrete_or_1" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (rule "concrete_and_2" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch " Case 2"
                           (rule "inChar" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "add_zero_left" (formula "1") (term "1,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                           (rule "qeq_literals" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,1,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "closeTrue" (formula "9"))
                        )
                     )
                     (branch " Case 2"
                        (rule "inChar" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "add_zero_left" (formula "1") (term "1,0,1,0"))
                        (rule "add_zero_left" (formula "1") (term "1,1,0,0"))
                        (rule "add_zero_left" (formula "9") (term "1"))
                        (rule "qeq_literals" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "11") (term "0,1,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "polySimp_elimSub" (formula "9") (term "0"))
                        (rule "mul_literals" (formula "9") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "9") (term "1"))
                        (rule "mul_literals" (formula "9") (term "1,1"))
                        (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "0,1,1,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,1,1,0"))
                        (rule "mul_literals" (formula "1") (term "1,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "1,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                        (rule "mul_literals" (formula "11") (term "1,0,1"))
                        (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,0"))
                        (rule "polySimp_elimSub" (formula "11") (term "1,2,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,2,0"))
                        (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "inEqSimp_gtRight" (formula "10"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "inEqSimp_gtToGeq" (formula "4"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "5"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_literals" (formula "5") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "6"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "inEqSimp_geqRight" (formula "10"))
                        (rule "polySimp_addComm0" (formula "10") (term "1"))
                        (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "5"))
                        (rule "concrete_and_1" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                        (rule "eqSymm" (formula "11"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,2,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "4"))
                        (rule "add_zero_right" (formula "10") (term "1"))
                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "4"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEqRigid" (formula "6") (term "1,0") (ifseqformula "3"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (rule "concrete_or_1" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                        (rule "andLeft" (formula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "leq_literals" (formula "6"))
                        (rule "closeFalse" (formula "6"))
                     )
                  )
                  (branch " Case 2"
                     (rule "inChar" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "add_zero_left" (formula "1") (term "1,0"))
                     (rule "add_zero_left" (formula "11") (term "0,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "close" (formula "11") (ifseqformula "1"))
                  )
               )
               (branch " CUT: k_2 = 0 FALSE"
                  (rule "inChar" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,1"))
                  (rule "mul_literals" (formula "10") (term "1,1,1"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,1"))
                  (rule "mul_literals" (formula "10") (term "1,0,1"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,2,1"))
                  (rule "mul_literals" (formula "10") (term "1,1,2,1"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0"))
                  (rule "inEqSimp_gtRight" (formula "9"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "4"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "2"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1"))
                  (rule "polySimp_addComm0" (formula "8") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,2,1"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "9"))
                  (rule "add_zero_right" (formula "1") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "9") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0"))
                  (rule "qeq_literals" (formula "9") (term "0"))
                  (rule "concrete_and_2" (formula "9"))
                  (rule "false_right" (formula "9"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                  (rule "concrete_and_2" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
            )
            (branch " i_2 >  0 FALSE"
               (rule "cl_substring0" (formula "10") (term "1") (userinteraction))
               (rule "ifthenelse_split" (formula "10") (term "1") (userinteraction))
               (branch " j_2 >  0 TRUE"
                  (rule "cut" (inst "cutFormula=i_2 >  0 | k_2 >  0") (userinteraction))
                  (branch " CUT: i_2 >  0 | k_2 >  0 TRUE"
                     (rule "orLeft" (formula "1") (userinteraction))
                     (branch " i_2 >  0"
                        (rule "closeAntec" (formula "1") (ifseqformula "11") (userinteraction))
                     )
                     (branch " k_2 >  0"
                        (rule "closeAntec" (formula "1") (ifseqformula "10") (userinteraction))
                     )
                  )
                  (branch " CUT: i_2 >  0 | k_2 >  0 FALSE"
                     (rule "inChar" (formula "7") (userinteraction))
                     (rule "true_left" (formula "7"))
                     (rule "orRight" (formula "8"))
                     (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,1,1,1"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,2,1,1"))
                     (rule "mul_literals" (formula "10") (term "1,1,2,1,1"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "5"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "3"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "1"))
                     (rule "polySimp_addComm0" (formula "9") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,1"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,2,1,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "11") (term "1,1,0") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "11") (term "1,0"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "7"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "6"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "6"))
                     (rule "add_zero_right" (formula "8") (term "1"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "times_zero_2" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_and_2" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
               )
               (branch " j_2 >  0 FALSE"
                  (rule "cut" (inst "cutFormula=k_2 >  0 | i_2 >  0") (userinteraction))
                  (branch " CUT: k_2 >  0 | i_2 >  0 TRUE"
                     (rule "orLeft" (formula "1") (userinteraction))
                     (branch " k_2 >  0"
                        (rule "closeAntec" (formula "1") (ifseqformula "9") (userinteraction))
                     )
                     (branch " i_2 >  0"
                        (rule "closeAntec" (formula "1") (ifseqformula "10") (userinteraction))
                     )
                  )
                  (branch " CUT: k_2 >  0 | i_2 >  0 FALSE"
                     (rule "inChar" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "orRight" (formula "7"))
                     (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                     (rule "mul_literals" (formula "10") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "8"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "5"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "1"))
                     (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "mul_literals" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "2"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "times_zero_2" (formula "5") (term "1,0"))
                     (rule "add_zero_right" (formula "5") (term "0"))
                     (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "9") (term "1"))
                     (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "11") (term "1,0"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEqRigid" (formula "9") (term "1,0,0") (ifseqformula "6"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (rule "concrete_and_2" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch " m_2 >  0 FALSE"
            (rule "cl_substringEmpty" (formula "9") (term "1") (userinteraction))
            (rule "cut" (inst "cutFormula=j_2 <= i_2") (userinteraction))
            (branch " CUT: j_2 <= i_2 TRUE"
               (rule "lemma_substringLt" (formula "10") (term "0") (userinteraction))
               (rule "ifthenelse_split" (formula "10") (term "0") (userinteraction))
               (branch " k_2 + j_2 - 1 <  i_2 + k_2 - 1 TRUE"
                  (rule "eqClose" (formula "11"))
                  (rule "inChar" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "closeTrue" (formula "10"))
               )
               (branch " k_2 + j_2 - 1 <  i_2 + k_2 - 1 FALSE"
                  (rule "inChar" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "9") (term "0"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0"))
                  (rule "inEqSimp_gtRight" (formula "8"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_gtRight" (formula "8"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "9"))
                  (rule "inEqSimp_gtToGeq" (formula "5"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "1"))
                  (rule "polySimp_addComm0" (formula "9") (term "1,1,1,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "4"))
                  (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,0"))
                  (rule "times_zero_1" (formula "5") (term "0"))
                  (rule "qeq_literals" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "times_zero_1" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "9") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "1"))
                  (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                  (rule "leq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                  (rule "qeq_literals" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "5"))
                  (rule "add_zero_right" (formula "6") (term "1"))
                  (rule "applyEqRigid" (formula "8") (term "1,1,0") (ifseqformula "5"))
                  (rule "add_zero_right" (formula "8") (term "1,0"))
                  (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "times_zero_2" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "applyEqRigid" (formula "8") (term "1,0,0") (ifseqformula "5"))
                  (rule "add_zero_right" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "3"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                  (rule "add_zero_right" (formula "5") (term "0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "0"))
                  (rule "inEqSimp_invertInEq1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "times_zero_2" (formula "5") (term "1"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_and_2" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch " CUT: j_2 <= i_2 FALSE"
               (rule "inChar" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "9") (term "0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0"))
               (rule "polySimp_elimSub" (formula "9") (term "1,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0"))
               (rule "inEqSimp_gtRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "8"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "4"))
               (rule "times_zero_1" (formula "4") (term "1,0,0"))
               (rule "add_zero_right" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "1"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "1,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "10") (term "1,0,0") (ifseqformula "6"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "6"))
               (rule "add_zero_right" (formula "10") (term "1,0"))
               (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "6"))
               (rule "add_zero_right" (formula "8") (term "1"))
               (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "6"))
               (rule "leq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
               (rule "qeq_literals" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "5"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "times_zero_2" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "3"))
               (rule "leq_literals" (formula "4") (term "0"))
               (rule "concrete_or_1" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
               (rule "add_zero_right" (formula "5") (term "0"))
               (rule "polySimp_mulComm0" (formula "5") (term "0"))
               (rule "inEqSimp_invertInEq1" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "times_zero_2" (formula "5") (term "1"))
               (rule "polySimp_elimOne" (formula "5") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_rightDist" (formula "1") (term "0"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (rule "concrete_and_2" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
   (branch " i_2 + k_2 >  0 FALSE"
      (rule "cl_substringI" (formula "7") (term "2,1") (userinteraction))
      (rule "ifthenelse_split" (formula "7") (term "2,1") (userinteraction))
      (branch " k_2 >  0 TRUE"
         (rule "cl_substring0" (formula "8") (term "0") (userinteraction))
         (rule "ifthenelse_split" (formula "8") (term "0") (userinteraction))
         (branch " k_2 + j_2 >  0 TRUE"
            (rule "inChar" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
            (rule "eqSymm" (formula "8"))
            (rule "polySimp_elimSub" (formula "8") (term "1,2,0"))
            (rule "mul_literals" (formula "8") (term "1,1,2,0"))
            (rule "polySimp_elimSub" (formula "8") (term "0,2,0"))
            (rule "mul_literals" (formula "8") (term "1,0,2,0"))
            (rule "polySimp_elimSub" (formula "8") (term "1,1,1"))
            (rule "mul_literals" (formula "8") (term "1,1,1,1"))
            (rule "inEqSimp_gtRight" (formula "7"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "2"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "6") (term "1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,1,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "8") (term "1,2,0"))
            (rule "polySimp_addComm0" (formula "8") (term "0,2,0"))
            (rule "polySimp_addComm0" (formula "8") (term "0,1,1,1"))
            (rule "polySimp_addComm0" (formula "2") (term "1,0"))
            (rule "polySimp_addComm1" (formula "8") (term "1,1,1"))
            (rule "polySimp_addComm0" (formula "8") (term "0,1,1,1"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
            (rule "leq_literals" (formula "5") (term "0"))
            (rule "concrete_or_1" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
            (rule "mul_literals" (formula "3") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
            (rule "qeq_literals" (formula "3") (term "0"))
            (rule "concrete_and_2" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
         (branch " k_2 + j_2 >  0 FALSE"
            (rule "lemma_substringLt" (formula "9") (term "1") (userinteraction))
            (rule "ifthenelse_split" (formula "9") (term "1") (userinteraction))
            (branch " j_2 <  i_2 TRUE"
               (rule "eqClose" (formula "10") (userinteraction))
               (rule "closeTrue" (formula "10") (userinteraction))
            )
            (branch " j_2 <  i_2 FALSE"
               (rule "inChar" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "eqSymm" (formula "5") (term "1,0,0,0,0"))
               (rule "eqSymm" (formula "9"))
               (rule "polySimp_elimSub" (formula "9") (term "0,2,0"))
               (rule "mul_literals" (formula "9") (term "1,0,2,0"))
               (rule "polySimp_elimSub" (formula "9") (term "1,2,0"))
               (rule "mul_literals" (formula "9") (term "1,1,2,0"))
               (rule "inEqSimp_ltRight" (formula "8"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "inEqSimp_gtRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "8"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "4"))
               (rule "times_zero_1" (formula "4") (term "1,0,0"))
               (rule "add_zero_right" (formula "4") (term "0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "1"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "9") (term "0,2,0"))
               (rule "polySimp_addComm0" (formula "9") (term "1,2,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1"))
               (rule "polySimp_elimOne" (formula "3") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_or_1" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
               (rule "mul_literals" (formula "4") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "polySimp_elimOne" (formula "4") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
               (rule "mul_literals" (formula "5") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "polySimp_elimOne" (formula "5") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "5"))
               (rule "qeq_literals" (formula "7") (term "0"))
               (rule "concrete_and_2" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
         )
      )
      (branch " k_2 >  0 FALSE"
         (rule "cut" (inst "cutFormula=k_2 = 0 & i_2 = 0") (userinteraction))
         (branch " CUT: k_2 = 0 & i_2 = 0 TRUE"
            (rule "andLeft" (formula "1") (userinteraction))
            (rule "applyEqRigid" (formula "10") (term "0,1,0") (ifseqformula "1") (userinteraction))
            (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "2") (userinteraction))
            (rule "cl_substring0" (formula "10") (term "2,1") (userinteraction))
            (rule "ifthenelse_split" (formula "10") (term "2,1") (userinteraction))
            (branch " m_2 >  0 TRUE"
               (rule "cl_substring0" (formula "11") (term "0") (userinteraction))
               (rule "ifthenelse_split" (formula "11") (term "0") (userinteraction))
               (branch " 0 + j_2 >  0 TRUE"
                  (rule "cl_substring0" (formula "12") (term "1") (userinteraction))
                  (rule "ifthenelse_split" (formula "12") (term "1") (userinteraction))
                  (branch " j_2 >  0 TRUE"
                     (rule "applyEqRigid" (formula "8") (term "0,1") (ifseqformula "4") (userinteraction))
                     (rule "add_zero_left" (formula "8") (term "1") (userinteraction))
                     (rule "add_zero_left" (formula "2") (term "0") (userinteraction))
                     (rule "hide_left" (formula "5") (userinteraction))
                     (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "4") (userinteraction))
                     (rule "add_zero_left" (formula "9") (term "0") (userinteraction))
                     (rule "hide_left" (formula "5") (userinteraction))
                     (rule "instAll" (formula "9") (term "0,1,1") (ifseqformula "7") (userinteraction))
                     (rule "hide_left" (formula "8") (userinteraction))
                     (rule "instAll" (formula "9") (term "1,1,1") (ifseqformula "1") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "instAll" (formula "9") (term "0,2,1,1") (ifseqformula "1") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "instAll" (formula "9") (term "1,2,1,1") (ifseqformula "1") (userinteraction))
                     (rule "hide_left" (formula "2") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch " Case 1"
                        (rule "qeq_literals" (formula "7") (term "0,0") (userinteraction))
                        (rule "qeq_literals" (formula "7") (term "1,0") (userinteraction))
                        (rule "andRight" (formula "7") (userinteraction))
                        (branch " Case 1"
                           (rule "andRight" (formula "7") (userinteraction))
                           (branch " Case 1"
                              (rule "closeTrue" (formula "7") (userinteraction))
                           )
                           (branch " Case 2"
                              (rule "closeTrue" (formula "7") (userinteraction))
                           )
                        )
                        (branch " Case 2"
                           (rule "inChar" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "add_zero_left" (formula "8") (term "0,1,1,0"))
                           (rule "add_zero_left" (formula "6") (term "1"))
                           (rule "eqSymm" (formula "8"))
                           (rule "polySimp_elimSub" (formula "6") (term "0"))
                           (rule "mul_literals" (formula "6") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "6") (term "1"))
                           (rule "mul_literals" (formula "6") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "8") (term "1,1,1"))
                           (rule "mul_literals" (formula "8") (term "1,1,1,1"))
                           (rule "polySimp_elimSub" (formula "8") (term "1,2,1,0"))
                           (rule "mul_literals" (formula "8") (term "1,1,2,1,0"))
                           (rule "polySimp_elimSub" (formula "8") (term "1,1,0"))
                           (rule "mul_literals" (formula "8") (term "1,1,1,0"))
                           (rule "inEqSimp_gtRight" (formula "7"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "7"))
                           (rule "inEqSimp_gtToGeq" (formula "3"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "4"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "1,1,1"))
                           (rule "polySimp_addComm0" (formula "8") (term "1,2,1,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "5"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                           (rule "andLeft" (formula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "add_zero_right" (formula "6") (term "0"))
                           (rule "leq_literals" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                     )
                     (branch " Case 2"
                        (rule "add_zero_right" (formula "1") (term "0,0") (userinteraction))
                        (rule "add_zero_left" (formula "1") (term "1,0") (userinteraction))
                        (rule "add_zero_left" (formula "9") (term "0,1,1,0") (userinteraction))
                        (rule "applyEqRigid" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
                        (rule "eqClose" (formula "9") (userinteraction))
                        (rule "closeTrue" (formula "9") (userinteraction))
                     )
                  )
                  (branch " j_2 >  0 FALSE"
                     (rule "add_zero_left" (formula "1") (term "0") (userinteraction))
                     (rule "closeAntec" (formula "1") (ifseqformula "12") (userinteraction))
                  )
               )
               (branch " 0 + j_2 >  0 FALSE"
                  (rule "add_zero_left" (formula "11") (term "0") (userinteraction))
                  (rule "applyEqRigid" (formula "6") (term "0,1") (ifseqformula "2") (userinteraction))
                  (rule "add_zero_left" (formula "6") (term "1") (userinteraction))
                  (rule "cut" (inst "cutFormula=j_2 = 0") (userinteraction))
                  (branch " CUT: j_2 = 0 TRUE"
                     (rule "applyEqRigid" (formula "13") (term "1,1") (ifseqformula "1") (userinteraction))
                     (rule "lemma_substringII" (formula "13") (term "1") (userinteraction))
                     (rule "eqClose" (formula "13") (userinteraction))
                     (rule "closeTrue" (formula "13") (userinteraction))
                  )
                  (branch " CUT: j_2 = 0 FALSE"
                     (rule "lemma_substringLt" (formula "13") (term "1") (userinteraction))
                     (rule "ifthenelse_split" (formula "13") (term "1") (userinteraction))
                     (branch " j_2 <  0 TRUE"
                        (rule "eqClose" (formula "14") (userinteraction))
                        (rule "closeTrue" (formula "14") (userinteraction))
                     )
                     (branch " j_2 <  0 FALSE"
                        (rule "inChar" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                        (rule "eqSymm" (formula "13"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,1,2,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,1,2,0"))
                        (rule "inEqSimp_gtRight" (formula "9"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtRight" (formula "11"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "12"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtRight" (formula "12"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "5"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,1,2,0"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "6"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "5"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                        (rule "leq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "2") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "8") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0"))
                        (rule "qeq_literals" (formula "8") (term "0"))
                        (rule "concrete_and_2" (formula "8"))
                        (rule "false_right" (formula "8"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (rule "concrete_and_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
            )
            (branch " m_2 >  0 FALSE"
               (rule "add_zero_left" (formula "11") (term "1,0") (userinteraction))
               (rule "cl_substringEmpty" (formula "11") (term "1") (userinteraction))
               (rule "lemma_substringLt" (formula "11") (term "0") (userinteraction))
               (rule "ifthenelse_split" (formula "11") (term "0") (userinteraction))
               (branch " j_2 <  0 TRUE"
                  (rule "eqClose" (formula "12") (userinteraction))
                  (rule "closeTrue" (formula "12") (userinteraction))
               )
               (branch " j_2 <  0 FALSE"
                  (rule "applyEqRigid" (formula "5") (term "0,1") (ifseqformula "1") (userinteraction))
                  (rule "add_zero_left" (formula "5") (term "1") (userinteraction))
                  (rule "cut" (inst "cutFormula=j_2 = 0") (userinteraction))
                  (branch " CUT: j_2 = 0 TRUE"
                     (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1") (userinteraction))
                     (rule "lemma_substringII" (formula "13") (term "0") (userinteraction))
                     (rule "eqClose" (formula "13") (userinteraction))
                     (rule "closeTrue" (formula "13") (userinteraction))
                  )
                  (branch " CUT: j_2 = 0 FALSE"
                     (rule "inChar" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                     (rule "inEqSimp_gtRight" (formula "10"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "9"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "11"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "11"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1,1,0,0,0,0"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "5"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "7") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (rule "concrete_and_2" (formula "7"))
                     (rule "false_right" (formula "7"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                     (rule "add_zero_right" (formula "5") (term "0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0"))
                     (rule "inEqSimp_invertInEq1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "times_zero_2" (formula "5") (term "1"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (rule "concrete_and_2" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch " CUT: k_2 = 0 & i_2 = 0 FALSE"
            (rule "andRight" (formula "6") (userinteraction))
            (branch " Case 1"
               (rule "inChar" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "eqSymm" (formula "8"))
               (rule "eqSymm" (formula "4") (term "1,0,0,0,0"))
               (rule "inEqSimp_gtRight" (formula "7"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "7"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "5") (term "1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "7"))
               (rule "add_zero_right" (formula "2") (term "1"))
               (rule "inEqSimp_contradEq3" (formula "7") (ifseqformula "2"))
               (rule "times_zero_1" (formula "7") (term "1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0"))
               (rule "qeq_literals" (formula "7") (term "0"))
               (rule "concrete_and_2" (formula "7"))
               (rule "false_right" (formula "7"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
               (rule "qeq_literals" (formula "2") (term "0"))
               (rule "concrete_and_2" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch " Case 2"
               (rule "inChar" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "eqSymm" (formula "8"))
               (rule "eqSymm" (formula "4") (term "1,0,0,0,0"))
               (rule "inEqSimp_gtRight" (formula "7"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_gtRight" (formula "7"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "5") (term "1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "8") (term "1,1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "7"))
               (rule "add_zero_right" (formula "3") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "7") (ifseqformula "3"))
               (rule "times_zero_1" (formula "7") (term "1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0"))
               (rule "leq_literals" (formula "7") (term "0"))
               (rule "concrete_and_2" (formula "7"))
               (rule "false_right" (formula "7"))
               (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
               (rule "leq_literals" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "3"))
               (rule "add_zero_right" (formula "4") (term "1"))
               (rule "applyEqRigid" (formula "6") (term "1,1,1") (ifseqformula "3"))
               (rule "add_zero_right" (formula "6") (term "1,1"))
               (rule "inEqSimp_invertInEq1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "times_zero_2" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (rule "concrete_and_2" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
)
(branch " Use Case"
   (rule "ifthenelse_split" (formula "2") (term "1") (userinteraction))
   (branch " i_10 >= 0 & k_8 >= 0 & m_7 >= k_8 + j_9 TRUE"
      (rule "instAll" (formula "3") (term "2,2,0") (ifseqformula "2") (userinteraction))
      (rule "hide_left" (formula "3") (userinteraction))
      (rule "instAll" (formula "3") (term "0,0") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "instAll" (formula "3") (term "1,0") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "instAll" (formula "3") (term "0,2,0") (ifseqformula "1") (userinteraction))
      (rule "hide_left" (formula "2") (userinteraction))
      (rule "instAll" (formula "3") (term "1,2,0") (ifseqformula "1") (userinteraction))
      (rule "impLeft" (formula "1") (userinteraction))
      (branch " Case 1"
         (rule "hide_left" (formula "1") (userinteraction))
         (rule "close" (formula "2") (ifseqformula "1") (userinteraction))
      )
      (branch " Case 2"
         (rule "eqSymm" (formula "4") (userinteraction))
         (rule "close" (formula "4") (ifseqformula "1") (userinteraction))
      )
   )
   (branch " i_10 >= 0 & k_8 >= 0 & m_7 >= k_8 + j_9 FALSE"
      (rule "eqClose" (formula "3") (userinteraction))
      (rule "closeTrue" (formula "3") (userinteraction))
   )
)
)

}
