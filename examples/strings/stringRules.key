\functions {
	   \nonRigid[Location] CharList content(java.lang.String);
}

\schemaVariables {
	\modalOperator { diamond, box, diamond_trc, box_trc, throughout_trc } #normalassign;
        \program Variable #v;
	\program StringLiteral #slit;
	\program SimpleStringExpression #se1, #se2;
	\formula post;
}

\rules {
       //
       // Assignment of a Literal
       //
       stringAssignment  { \find (\modality{#normalassign}{.. #v = #slit; ...}\endmodality(post)) 
                \replacewith ({ #v := java.lang.String::<get>(#v.<nextToCreate>@(java.lang.String)) }{
			     	#v.<nextToCreate>@(java.lang.String) := #v.<nextToCreate>@(java.lang.String)+1 ||
			     	#v.<created>@(java.lang.Object):=TRUE ||
				#v.<initialized>@(java.lang.Object):=TRUE ||
				#v.<transient>@(java.lang.Object):=0 ||
				content(#v):= #slit}
				\modality{#normalassign}{.. ...}\endmodality(post)) 
                \displayname "assignment"
		\heuristics (userTaclets3)
	};

	//
	// The "+" operator
	//
	stringConcat {
	    \find ( \modality{#normalassign}{.. #v = #se1 + #se2; ...}\endmodality(post))
	    \replacewith ( { content(#v) := concat(content(#se1),content(#se2)) }
	    		   \modality{#normalassign}{.. ...}\endmodality(post) )
	    \displayname "concatenation"
	    \heuristics (userTaclets3)
	};
}
