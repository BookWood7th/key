( benchmark KeY-translation

 :logic AUFLIA
 :extrasorts ()
:extrapreds ((much_smaller_26 Int Int ) (wolf_3 Int ) (caterpillar_13 Int ) (grain_19 Int ) (fox_7 Int ) (plant_21 Int ) (eats_24 Int Int ) (bird_10 Int ) (snail_16 Int ) (animal_4 Int ) (type_of_S_1_2 Int ) )
:extrafuns ()
:formula (not (implies (and true (and true true)) (implies (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (?X_0 Int) (implies (type_of_S_1_2 ?X_0) (implies (wolf_3 ?X_0) (animal_4 ?X_0)))) (exists(?X1_5 Int)(and (type_of_S_1_2 ?X1_5) (wolf_3 ?X1_5)))) (forall (?X_6 Int) (implies (type_of_S_1_2 ?X_6) (implies (fox_7 ?X_6) (animal_4 ?X_6))))) (exists(?X1_8 Int)(and (type_of_S_1_2 ?X1_8) (fox_7 ?X1_8)))) (forall (?X_9 Int) (implies (type_of_S_1_2 ?X_9) (implies (bird_10 ?X_9) (animal_4 ?X_9))))) (exists(?X1_11 Int)(and (type_of_S_1_2 ?X1_11) (bird_10 ?X1_11)))) (forall (?X_12 Int) (implies (type_of_S_1_2 ?X_12) (implies (caterpillar_13 ?X_12) (animal_4 ?X_12))))) (exists(?X1_14 Int)(and (type_of_S_1_2 ?X1_14) (caterpillar_13 ?X1_14)))) (forall (?X_15 Int) (implies (type_of_S_1_2 ?X_15) (implies (snail_16 ?X_15) (animal_4 ?X_15))))) (exists(?X1_17 Int)(and (type_of_S_1_2 ?X1_17) (snail_16 ?X1_17)))) (exists(?X_18 Int)(and (type_of_S_1_2 ?X_18) (grain_19 ?X_18)))) (forall (?X1_20 Int) (implies (type_of_S_1_2 ?X1_20) (implies (grain_19 ?X1_20) (plant_21 ?X1_20))))) (forall (?X_22 Int) (implies (type_of_S_1_2 ?X_22) (implies (animal_4 ?X_22) (or (forall (?Y_23 Int) (implies (type_of_S_1_2 ?Y_23) (implies (plant_21 ?Y_23) (eats_24 ?X_22 ?Y_23)))) (forall (?Y1_25 Int) (implies (type_of_S_1_2 ?Y1_25) (implies (and (and (animal_4 ?Y1_25) (much_smaller_26 ?Y1_25 ?X_22)) (exists(?Z_27 Int)(and (type_of_S_1_2 ?Z_27) (and (plant_21 ?Z_27) (eats_24 ?Y1_25 ?Z_27))))) (eats_24 ?X_22 ?Y1_25))))))))) (forall (?X_28 Int) (implies (type_of_S_1_2 ?X_28) (forall (?Y_29 Int) (implies (type_of_S_1_2 ?Y_29) (implies (and (bird_10 ?Y_29) (or (snail_16 ?X_28) (caterpillar_13 ?X_28))) (much_smaller_26 ?X_28 ?Y_29))))))) (forall (?X_30 Int) (implies (type_of_S_1_2 ?X_30) (forall (?Y_31 Int) (implies (type_of_S_1_2 ?Y_31) (implies (and (bird_10 ?X_30) (fox_7 ?Y_31)) (much_smaller_26 ?X_30 ?Y_31))))))) (forall (?X_32 Int) (implies (type_of_S_1_2 ?X_32) (forall (?Y_33 Int) (implies (type_of_S_1_2 ?Y_33) (implies (and (fox_7 ?X_32) (wolf_3 ?Y_33)) (much_smaller_26 ?X_32 ?Y_33))))))) (forall (?X_34 Int) (implies (type_of_S_1_2 ?X_34) (forall (?Y_35 Int) (implies (type_of_S_1_2 ?Y_35) (implies (and (wolf_3 ?X_34) (or (fox_7 ?Y_35) (grain_19 ?Y_35))) (not (eats_24 ?X_34 ?Y_35)))))))) (forall (?X_36 Int) (implies (type_of_S_1_2 ?X_36) (forall (?Y_37 Int) (implies (type_of_S_1_2 ?Y_37) (implies (and (bird_10 ?X_36) (caterpillar_13 ?Y_37)) (eats_24 ?X_36 ?Y_37))))))) (forall (?X_38 Int) (implies (type_of_S_1_2 ?X_38) (forall (?Y_39 Int) (implies (type_of_S_1_2 ?Y_39) (implies (and (bird_10 ?X_38) (snail_16 ?Y_39)) (not (eats_24 ?X_38 ?Y_39)))))))) (forall (?X_40 Int) (implies (type_of_S_1_2 ?X_40) (implies (or (caterpillar_13 ?X_40) (snail_16 ?X_40)) (exists(?Y_41 Int)(and (type_of_S_1_2 ?Y_41) (and (plant_21 ?Y_41) (eats_24 ?X_40 ?Y_41)))))))) (exists(?X_42 Int)(and (type_of_S_1_2 ?X_42) (exists(?Y_43 Int)(and (type_of_S_1_2 ?Y_43) (and (and (animal_4 ?X_42) (animal_4 ?Y_43)) (exists(?Z_44 Int)(and (type_of_S_1_2 ?Z_44) (and (and (grain_19 ?Z_44) (eats_24 ?Y_43 ?Z_44)) (eats_24 ?X_42 ?Y_43))))))))))))
)
