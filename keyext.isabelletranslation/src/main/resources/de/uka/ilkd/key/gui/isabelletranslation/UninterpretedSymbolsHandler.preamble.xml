<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

<comment>General preamble</comment>
    <entry key="uninterpreted.preamble">
declare [[coercion_enabled]]
declare [[coercion_map image]]


typedecl any


consts
int_subset_inany::"any set"
int2any::"int\&lt;Rightarrow&gt;any"
any2int::"any\&lt;Rightarrow&gt;int"

axiomatization where int_sub_any:"type_definition int2any any2int (int_subset_inany)"
declare [[coercion int2any]]


consts
bool_Image::"any set"
bool2any::"bool\&lt;Rightarrow&gt;any"
any2bool::"any\&lt;Rightarrow&gt;bool"

axiomatization where bool_sub_any:"type_definition bool2any any2bool (bool_Image)"
declare [[coercion bool2any]]

consts
bottom::"any"

specification (bottom) "bottom = bottom"
  by simp

lemma bottom_in_any:"bottom \&lt;in&gt; (UNIV::any set)"
  by simp



consts
java_lang_Object_UNIV::"any set"


specification (java_lang_Object_UNIV) "java_lang_Object_UNIV \&lt;subseteq&gt; (UNIV::any set)" "bottom:java_lang_Object_UNIV"
  by auto

lemma java_lang_Object_UNIV_specification:"java_lang_Object_UNIV \&lt;subseteq&gt; (UNIV::any set) \&lt;and&gt; bottom:java_lang_Object_UNIV"
  by (metis (mono_tags, lifting) java_lang_Object_UNIV_def UNIV_I subset_UNIV verit_sko_ex_indirect)


typedef java_lang_Object = "java_lang_Object_UNIV"
  morphisms java_lang_Object2any any2java_lang_Object
  using java_lang_Object_UNIV_specification by auto

declare [[coercion java_lang_Object2any]]

lemma java_lang_Object_subset_any[simp]:"(UNIV::java_lang_Object set) \&lt;subseteq&gt; (UNIV::any set)"
  by simp

lemma bottom_in_java_lang_Object[simp] :"bottom \&lt;in&gt; (UNIV::java_lang_Object set)"
  using java_lang_Object_UNIV_specification
  using type_definition.Rep_range type_definition_java_lang_Object by blast

typedecl Field
(* "TODO: implement Field type" *)

typedef LocSet = "UNIV::(java_lang_Object \&lt;times&gt; Field) set set"
  by simp

declare [[coercion Rep_LocSet]]

consts
LocSet_Image::"any set"
LocSet2any::"LocSet\&lt;Rightarrow&gt;any"
any2LocSet::"any\&lt;Rightarrow&gt;LocSet"

axiomatization where LocSet_sub_any:"type_definition LocSet2any any2LocSet LocSet_Image"

declare [[coercion LocSet2any]]

typedef Heap = "UNIV::(java_lang_Object \&lt;Rightarrow&gt; Field \&lt;Rightarrow&gt; any) set"
  by simp

declare [[coercion Rep_Heap]]

consts
Heap_Image::"any set"
Heap2any::"Heap\&lt;Rightarrow&gt;any"
any2Heap::"any\&lt;Rightarrow&gt;Heap"

axiomatization where Heap_sub_any:"type_definition Heap2any any2Heap Heap_Image"

declare [[coercion Heap2any]]

class any = 
  fixes to_any::"'a\&lt;Rightarrow&gt;any"
  fixes cast::"any\&lt;Rightarrow&gt;'a"
  fixes exact_instance::"'a\&lt;Rightarrow&gt;bool"


instantiation any::any
begin
definition "to_any_any \&lt;equiv&gt; (id::any\&lt;Rightarrow&gt;any)"
definition "cast_any \&lt;equiv&gt; (id::any\&lt;Rightarrow&gt;any)"
instance by standard
end



instantiation int::any
begin
definition "to_any_int \&lt;equiv&gt; int2any"
definition "cast_int \&lt;equiv&gt; any2int"
instance by standard
end

instantiation bool::any
begin
definition "to_any_bool \&lt;equiv&gt; bool2any"
definition "cast_bool \&lt;equiv&gt; any2bool"
instance by standard
end

instantiation LocSet::any
begin
definition "to_any_LocSet \&lt;equiv&gt; LocSet2any"
definition "cast_LocSet \&lt;equiv&gt; any2LocSet"
instance by standard
end

class java_lang_Object = any

instantiation java_lang_Object::java_lang_Object
begin
definition "cast_java_lang_Object \&lt;equiv&gt; any2java_lang_Object"
definition "to_any_java_lang_Object \&lt;equiv&gt; java_lang_Object2any"
instance by standard
end

typedef (overloaded) Null = "{bottom}"
  morphisms Null2any any2Null
  by simp

declare [[coercion Null2any]]

lemma bottom_Null_set:"(UNIV::Null set) = {bottom}"
  using type_definition.Rep_range type_definition_Null by blast

lemma Null_sub_java_lang_Object_Types: "(UNIV::Null set) \&lt;subseteq&gt; (UNIV::java_lang_Object set)"
  using bottom_Null_set bottom_in_java_lang_Object by auto

definition "null \&lt;equiv&gt; any2Null bottom"

instantiation Null::java_lang_Object
begin
definition "to_any_Null \&lt;equiv&gt; Null2any"
definition "cast_Null \&lt;equiv&gt; any2Null"
instance by standard
end

abbreviation "Null2java_lang_Object\&lt;equiv&gt;any2java_lang_Object \&lt;circ&gt; Null2any"

declare [[coercion Null2java_lang_Object]]

consts
select::"Heap\&lt;Rightarrow&gt;java_lang_Object\&lt;Rightarrow&gt;Field\&lt;Rightarrow&gt;('a::any)"
store::"Heap\&lt;Rightarrow&gt;java_lang_Object\&lt;Rightarrow&gt;Field\&lt;Rightarrow&gt;any\&lt;Rightarrow&gt;Heap"
create::"Heap\&lt;Rightarrow&gt;java_lang_Object\&lt;Rightarrow&gt;Heap"
anon::"Heap\&lt;Rightarrow&gt;LocSet\&lt;Rightarrow&gt;Heap\&lt;Rightarrow&gt;Heap"
wellFormed::"Heap\&lt;Rightarrow&gt;bool"
created::"Field"
locEps::"(java_lang_Object \&lt;times&gt; Field \&lt;times&gt; LocSet) \&lt;Rightarrow&gt; bool"
length::"java_lang_Object\&lt;Rightarrow&gt;int"

axiomatization where length_nonneg[simp]:"length obj \&lt;ge&gt; 0"

definition "unusedLocs (h::Heap) \&lt;equiv&gt; {((obj::java_lang_Object), (f::Field)). (h obj created=False)\&lt;and&gt; obj\&lt;noteq&gt;null}"

section \&lt;open&gt;select Axioms\&lt;close&gt;
axiomatization where selectOfStore:"select (store h obj f x) o2 f2 \&lt;equiv&gt; (if (obj = o2 \&lt;and&gt; f=f2 \&lt;and&gt; f\&lt;noteq&gt;created) then cast (any2java_lang_Object x) else (select h o2 f2))"
and selectOfCreate:"select (create h obj) o2 f \&lt;equiv&gt; (if (obj=o2 \&lt;and&gt; ((java_lang_Object2any obj)\&lt;noteq&gt;null) \&lt;and&gt; f=created) then cast (any2java_lang_Object True) else select h o2 f)"
and selectOfAnon:"select (anon h s h') obj f \&lt;equiv&gt; (if ((((obj, f):s)\&lt;and&gt;(f\&lt;noteq&gt;created))\&lt;or&gt;(obj, f):unusedLocs(h)) then select h' obj f else select h obj f)"


section \&lt;open&gt;wellFormed Axioms\&lt;close&gt;
axiomatization where onlyCreatedjava_lang_ObjecteAreReferenced:"wellFormed h \&lt;Longrightarrow&gt; select h obj f = null \&lt;or&gt; ((select h (select h obj f) created)::bool)"
and onlyCreatedjava_lang_ObjectsAreInLocSets:"wellFormed h \&lt;and&gt; ((o2::java_lang_Object), f2)\&lt;in&gt;((select h obj f)::LocSet) \&lt;Longrightarrow&gt; Null2java_lang_Object null=o2 \&lt;or&gt; ((select h o2 created)::bool)"
and wellFormedStorejava_lang_Object:"wellFormed h \&lt;and&gt; ((x::java_lang_Object)=null \&lt;or&gt; ((select h x created) \&lt;and&gt; instanceof x)) \&lt;Longrightarrow&gt; wellFormed (store h obj f x)"

fun instance_All_useSet::"any\&lt;Rightarrow&gt;('a::any) set\&lt;Rightarrow&gt;bool"
  where "instance_All_useSet x y = (to_any x : image to_any y)"

fun instance_All_useRep::"any\&lt;Rightarrow&gt;'a::any\&lt;Rightarrow&gt;bool"
  where "instance_All_useRep x y = (\&lt;exists&gt;z::'a. to_any z = x)"

fun instance_All_UnivRep::"any\&lt;Rightarrow&gt;'a::any\&lt;Rightarrow&gt;bool"
  where "instance_All_UnivRep x y = (x : image to_any (UNIV::'a set))"
  </entry>
</properties>
