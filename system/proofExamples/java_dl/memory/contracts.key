\javaSource ".";

\contracts{

/*Memorystack_push_LT{
  

  \programVariables{
	javax.realtime.MemoryStack result,s;
	javax.realtime.ScopedMemory m;
  }

    true ->
	\<{result=s.push(m)@javax.realtime.MemoryStack;}\>
		(!(result=null) & result._stack.length=s._stack.length+1 &
                result._stack[s._stack.length]=m & (\forall int i; (i>=0 &
                i<s._stack.length -> result._stack[i]=s._stack[i])) &
		result=javax.realtime.MemoryStack::<get>(
			javax.realtime.MemoryStack::<nextToCreate>@pre) &
		javax.realtime.MemoryStack.<nextToCreate>=
			javax.realtime.MemoryStack::<nextToCreate>@pre+1 &
		result._stack = javax.realtime.LTMemory[]::<get>(
			javax.realtime.LTMemory[]::<nextToCreate>@pre) &
		javax.realtime.LTMemory[].<nextToCreate>=
			javax.realtime.LTMemory[]::<nextToCreate>@pre+1 &
		result.memoryArea = m.memoryArea &
		outerScope(s, result))
    
	\modifies {javax.realtime.LTMemory[].<nextToCreate>, 
	       javax.realtime.LTMemory[]::<get>(
			javax.realtime.LTMemory[].<nextToCreate>).<created>,
		javax.realtime.MemoryStack.<nextToCreate>, 
	       	javax.realtime.MemoryStack::<get>(
			javax.realtime.MemoryStack.<nextToCreate>).<created>}
};*/


Memorystack_push{
  

  \programVariables{
	javax.realtime.MemoryStack result,s;
	javax.realtime.ScopedMemory m;
  }

    true ->
	\<{result=s.push(m)@javax.realtime.MemoryStack;}\>
		(!(result=null) & result._stack.length=s._stack.length+1 &
                result._stack[s._stack.length]=m & (\forall int i; (i>=0 &
                i<s._stack.length -> result._stack[i]=s._stack[i])) &
		result=javax.realtime.MemoryStack::<get>(
			javax.realtime.MemoryStack::<nextToCreate>@pre) &
		javax.realtime.MemoryStack.<nextToCreate>=
			javax.realtime.MemoryStack::<nextToCreate>@pre+1 &
		result._stack = javax.realtime.ScopedMemory[]::<get>(
			javax.realtime.ScopedMemory[]::<nextToCreate>@pre) &
		javax.realtime.ScopedMemory[].<nextToCreate>=
			javax.realtime.ScopedMemory[]::<nextToCreate>@pre+1 &
		result.memoryArea = m.memoryArea &
		outerScope(s, result))
    
	\modifies {javax.realtime.ScopedMemory[].<nextToCreate>, 
	       javax.realtime.ScopedMemory[]::<get>(
			javax.realtime.ScopedMemory[].<nextToCreate>).<created>,
		javax.realtime.MemoryStack.<nextToCreate>, 
	       	javax.realtime.MemoryStack::<get>(
			javax.realtime.MemoryStack.<nextToCreate>).<created>}
};




}

\chooseContract